# Makefile.in generated by automake 1.11.6 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






VPATH = src
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/overpassapi
pkgincludedir = $(includedir)/overpassapi
pkglibdir = $(libdir)/overpassapi
pkglibexecdir = $(libexecdir)/overpassapi
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4) $(am__EXEEXT_5) $(am__EXEEXT_6) \
	$(am__EXEEXT_7) $(am__EXEEXT_3)
cgibin_PROGRAMS = $(am__EXEEXT_8)
subdir = .
DIST_COMMON = $(am__configure_deps) $(dist_bin_SCRIPTS) \
	$(dist_cgibin_SCRIPTS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/configure ar-lib config.guess config.sub depcomp \
	install-sh ltmain.sh missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libcore_la_DEPENDENCIES = libdispatcher.la libexpatwrapper.la \
	libsettings.la libweboutput.la
am_libcore_la_OBJECTS = map_ql_parser.lo statement_dump.lo \
	map_ql_input.lo
libcore_la_OBJECTS = $(am_libcore_la_OBJECTS)
libdata_la_DEPENDENCIES =
am_libdata_la_OBJECTS = collect_members.lo
libdata_la_OBJECTS = $(am_libdata_la_OBJECTS)
libdispatcher_la_DEPENDENCIES =
am_libdispatcher_la_OBJECTS = dispatcher.lo resource_manager.lo \
	area_updater.lo
libdispatcher_la_OBJECTS = $(am_libdispatcher_la_OBJECTS)
libexpatwrapper_la_DEPENDENCIES =
am_libexpatwrapper_la_OBJECTS = expat_justparse_interface.lo
libexpatwrapper_la_OBJECTS = $(am_libexpatwrapper_la_OBJECTS)
libfrontend_la_DEPENDENCIES = liboutput.la
am_libfrontend_la_OBJECTS = cgi-helper.lo user_interface.lo
libfrontend_la_OBJECTS = $(am_libfrontend_la_OBJECTS)
liboutput_la_DEPENDENCIES =
am_liboutput_la_OBJECTS = output.lo
liboutput_la_OBJECTS = $(am_liboutput_la_OBJECTS)
libsettings_la_DEPENDENCIES =
am_libsettings_la_OBJECTS = settings.lo
libsettings_la_OBJECTS = $(am_libsettings_la_OBJECTS)
libweboutput_la_DEPENDENCIES = libfrontend.la
am_libweboutput_la_OBJECTS = web_output.lo
libweboutput_la_OBJECTS = $(am_libweboutput_la_OBJECTS)
am__EXEEXT_1 = bin/osm3s_query$(EXEEXT) bin/dispatcher$(EXEEXT) \
	bin/update_database$(EXEEXT) bin/update_from_dir$(EXEEXT)
am__EXEEXT_2 = bin/uncgi$(EXEEXT) bin/escape_xml$(EXEEXT)
am__EXEEXT_3 =
am__EXEEXT_4 = bin/process_augmented_diffs$(EXEEXT) bin/uncgi$(EXEEXT)
am__EXEEXT_5 = bin/translate_xapi$(EXEEXT)
am__EXEEXT_6 = bin/tocgi$(EXEEXT) bin/uncgi$(EXEEXT) \
	bin/escape_xml$(EXEEXT)
am__EXEEXT_7 = bin/sketch_route_svg$(EXEEXT) \
	bin/draw_route_svg$(EXEEXT) bin/bbox_brim_query$(EXEEXT) \
	bin/uncgi$(EXEEXT) bin/escape_xml$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(cgibindir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(cgibindir)" \
	"$(DESTDIR)$(templatesdir)"
am__EXEEXT_8 = cgi-bin/interpreter$(EXEEXT) cgi-bin/timestamp$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(cgibin_PROGRAMS)
am_bin_bbox_brim_query_OBJECTS = bbox-brim-query.$(OBJEXT)
bin_bbox_brim_query_OBJECTS = $(am_bin_bbox_brim_query_OBJECTS)
bin_bbox_brim_query_DEPENDENCIES = libexpatwrapper.la
am__dirstamp = $(am__leading_dot)dirstamp
am_bin_dispatcher_OBJECTS = dispatcher_server.$(OBJEXT)
bin_dispatcher_OBJECTS = $(am_bin_dispatcher_OBJECTS)
bin_dispatcher_DEPENDENCIES = libdispatcher.la libfrontend.la \
	libsettings.la
am__objects_1 = escape_xml.$(OBJEXT)
am_bin_draw_route_svg_OBJECTS = $(am__objects_1) read_input.$(OBJEXT) \
	topographic.$(OBJEXT)
bin_draw_route_svg_OBJECTS = $(am_bin_draw_route_svg_OBJECTS)
bin_draw_route_svg_DEPENDENCIES = libexpatwrapper.la
am_bin_escape_xml_OBJECTS = escape_xml.$(OBJEXT) \
	escape_xml_main.$(OBJEXT)
bin_escape_xml_OBJECTS = $(am_bin_escape_xml_OBJECTS)
bin_escape_xml_DEPENDENCIES =
am__objects_2 = statement.$(OBJEXT) area_query.$(OBJEXT) \
	around.$(OBJEXT) bbox_query.$(OBJEXT) changed.$(OBJEXT) \
	coord_query.$(OBJEXT) difference.$(OBJEXT) foreach.$(OBJEXT) \
	id_query.$(OBJEXT) item.$(OBJEXT) make_area.$(OBJEXT) \
	map_to_area.$(OBJEXT) newer.$(OBJEXT) osm_script.$(OBJEXT) \
	pivot.$(OBJEXT) polygon_query.$(OBJEXT) print.$(OBJEXT) \
	query.$(OBJEXT) recurse.$(OBJEXT) union.$(OBJEXT) \
	user.$(OBJEXT) print_target.$(OBJEXT) escape_xml.$(OBJEXT)
am_bin_osm3s_query_OBJECTS = $(am__objects_2) console_output.$(OBJEXT) \
	osm3s_query.$(OBJEXT) clone_database.$(OBJEXT) \
	scripting_core.$(OBJEXT) dispatcher_stub.$(OBJEXT) \
	types.$(OBJEXT)
bin_osm3s_query_OBJECTS = $(am_bin_osm3s_query_OBJECTS)
bin_osm3s_query_DEPENDENCIES = libcore.la libdata.la
am_bin_process_augmented_diffs_OBJECTS =  \
	process_augmented_diffs.$(OBJEXT) escape_xml.$(OBJEXT)
bin_process_augmented_diffs_OBJECTS =  \
	$(am_bin_process_augmented_diffs_OBJECTS)
bin_process_augmented_diffs_DEPENDENCIES = libexpatwrapper.la
am_bin_sketch_route_svg_OBJECTS = $(am__objects_1) \
	sketch-route-svg.$(OBJEXT) processed_input.$(OBJEXT)
bin_sketch_route_svg_OBJECTS = $(am_bin_sketch_route_svg_OBJECTS)
bin_sketch_route_svg_DEPENDENCIES = libexpatwrapper.la
am_bin_tocgi_OBJECTS = tocgi.$(OBJEXT)
bin_tocgi_OBJECTS = $(am_bin_tocgi_OBJECTS)
bin_tocgi_DEPENDENCIES =
am_bin_translate_xapi_OBJECTS = translate_xapi.$(OBJEXT) \
	escape_xml.$(OBJEXT)
bin_translate_xapi_OBJECTS = $(am_bin_translate_xapi_OBJECTS)
bin_translate_xapi_DEPENDENCIES =
am_bin_uncgi_OBJECTS = uncgi.$(OBJEXT)
bin_uncgi_OBJECTS = $(am_bin_uncgi_OBJECTS)
bin_uncgi_DEPENDENCIES =
am__objects_3 = meta_updater.$(OBJEXT) basic_updater.$(OBJEXT) \
	node_updater.$(OBJEXT) way_updater.$(OBJEXT) \
	relation_updater.$(OBJEXT) osm_updater.$(OBJEXT) \
	escape_xml.$(OBJEXT)
am_bin_update_database_OBJECTS = $(am__objects_3) \
	update_database.$(OBJEXT) types.$(OBJEXT)
bin_update_database_OBJECTS = $(am_bin_update_database_OBJECTS)
bin_update_database_DEPENDENCIES = libdata.la libdispatcher.la \
	libexpatwrapper.la liboutput.la libsettings.la
am_bin_update_from_dir_OBJECTS = $(am__objects_3) \
	update_from_dir.$(OBJEXT) types.$(OBJEXT)
bin_update_from_dir_OBJECTS = $(am_bin_update_from_dir_OBJECTS)
bin_update_from_dir_DEPENDENCIES = libdata.la libdispatcher.la \
	libexpatwrapper.la liboutput.la libsettings.la
am_cgi_bin_interpreter_OBJECTS = $(am__objects_2) web_query.$(OBJEXT) \
	scripting_core.$(OBJEXT) dispatcher_stub.$(OBJEXT) \
	types.$(OBJEXT)
cgi_bin_interpreter_OBJECTS = $(am_cgi_bin_interpreter_OBJECTS)
cgi_bin_interpreter_DEPENDENCIES = libcore.la libdata.la
am_cgi_bin_timestamp_OBJECTS = db_timestamp.$(OBJEXT) \
	dispatcher_stub.$(OBJEXT) types.$(OBJEXT)
cgi_bin_timestamp_OBJECTS = $(am_cgi_bin_timestamp_OBJECTS)
cgi_bin_timestamp_DEPENDENCIES = libdispatcher.la libsettings.la \
	libweboutput.la
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(dist_bin_SCRIPTS) $(dist_cgibin_SCRIPTS)
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libcore_la_SOURCES) $(libdata_la_SOURCES) \
	$(libdispatcher_la_SOURCES) $(libexpatwrapper_la_SOURCES) \
	$(libfrontend_la_SOURCES) $(liboutput_la_SOURCES) \
	$(libsettings_la_SOURCES) $(libweboutput_la_SOURCES) \
	$(bin_bbox_brim_query_SOURCES) $(bin_dispatcher_SOURCES) \
	$(bin_draw_route_svg_SOURCES) $(bin_escape_xml_SOURCES) \
	$(bin_osm3s_query_SOURCES) \
	$(bin_process_augmented_diffs_SOURCES) \
	$(bin_sketch_route_svg_SOURCES) $(bin_tocgi_SOURCES) \
	$(bin_translate_xapi_SOURCES) $(bin_uncgi_SOURCES) \
	$(bin_update_database_SOURCES) $(bin_update_from_dir_SOURCES) \
	$(cgi_bin_interpreter_SOURCES) $(cgi_bin_timestamp_SOURCES)
DIST_SOURCES = $(libcore_la_SOURCES) $(libdata_la_SOURCES) \
	$(libdispatcher_la_SOURCES) $(libexpatwrapper_la_SOURCES) \
	$(libfrontend_la_SOURCES) $(liboutput_la_SOURCES) \
	$(libsettings_la_SOURCES) $(libweboutput_la_SOURCES) \
	$(bin_bbox_brim_query_SOURCES) $(bin_dispatcher_SOURCES) \
	$(bin_draw_route_svg_SOURCES) $(bin_escape_xml_SOURCES) \
	$(bin_osm3s_query_SOURCES) \
	$(bin_process_augmented_diffs_SOURCES) \
	$(bin_sketch_route_svg_SOURCES) $(bin_tocgi_SOURCES) \
	$(bin_translate_xapi_SOURCES) $(bin_uncgi_SOURCES) \
	$(bin_update_database_SOURCES) $(bin_update_from_dir_SOURCES) \
	$(cgi_bin_interpreter_SOURCES) $(cgi_bin_timestamp_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(templates_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir dist dist-all distcheck
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /workspace/osm/overpass/osm3s_v0.7.51/src/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AR = ar
AUTOCONF = ${SHELL} /workspace/osm/overpass/osm3s_v0.7.51/src/missing --run autoconf
AUTOHEADER = ${SHELL} /workspace/osm/overpass/osm3s_v0.7.51/src/missing --run autoheader
AUTOMAKE = ${SHELL} /workspace/osm/overpass/osm3s_v0.7.51/src/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS =
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O3
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL =
DUMPBIN =
ECHO_C =
ECHO_N = -n
ECHO_T =
EGREP = /bin/grep -E
EXEEXT =
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS =
LIBOBJS =
LIBS = -lrt -lexpat
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO =
LN_S = ln -s
LTLIBOBJS =
MAKEINFO = ${SHELL} /workspace/osm/overpass/osm3s_v0.7.51/src/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT =
OBJDUMP = objdump
OBJEXT = o
OTOOL =
OTOOL64 =
PACKAGE = overpassapi
PACKAGE_BUGREPORT = roland.olbricht@gmx.de
PACKAGE_NAME = OverpassAPI
PACKAGE_STRING = OverpassAPI 0.6.98
PACKAGE_TARNAME = overpassapi
PACKAGE_URL =
PACKAGE_VERSION = 0.6.98
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE =
SHELL = /bin/bash
STRIP = strip
VERSION = 0.6.98
abs_builddir = /workspace/osm/overpass/osm3s_v0.7.51
abs_srcdir = /workspace/osm/overpass/osm3s_v0.7.51/src
abs_top_builddir = /workspace/osm/overpass/osm3s_v0.7.51
abs_top_srcdir = /workspace/osm/overpass/osm3s_v0.7.51/src
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN =
am__include = include
am__leading_dot = .
am__quote =
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias =
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias =
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /workspace/osm/overpass/osm3s_v0.7.51/src/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /workspace/osm/overpass/osm3s_v0.7.51
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = src
sysconfdir = ${prefix}/etc
target_alias =
top_build_prefix =
top_builddir = .
top_srcdir = src
bin_mandatory = bin/osm3s_query bin/dispatcher bin/update_database bin/update_from_dir
bin_script_mandatory = bin/apply_osc_to_db.sh bin/fetch_osc.sh bin/rules_loop.sh bin/download_clone.sh
cgi_bin_mandatory = cgi-bin/interpreter cgi-bin/timestamp
cgi_bin_script_mandatory = cgi-bin/kill_my_queries cgi-bin/map
bin_customoutput = bin/uncgi bin/escape_xml
bin_script_customoutput =
cgi_bin_customoutput =
cgi_bin_script_customoutput = cgi-bin/template
bin_clone =
bin_script_clone = bin/compress_clone.sh bin/clone.sh
cgi_bin_clone =
cgi_bin_script_clone = cgi-bin/trigger_clone
bin_augmented_diffs = bin/process_augmented_diffs bin/uncgi
bin_script_augmented_diffs =
cgi_bin_augmented_diffs =
cgi_bin_script_augmented_diffs = cgi-bin/augmented_diff cgi-bin/augmented_diff_status cgi-bin/augmented_state_by_date
bin_xapi_layer = bin/translate_xapi
bin_script_xapi_layer = bin/cleanup_xapi_tmp.sh
cgi_bin_xapi_layer =
cgi_bin_script_xapi_layer = cgi-bin/convert_xapi cgi-bin/xapi cgi-bin/xapi_meta
bin_openlayers = bin/tocgi bin/uncgi bin/escape_xml
bin_script_openlayers =
cgi_bin_openlayers =
cgi_bin_script_openlayers = cgi-bin/convert
bin_public_transport = bin/sketch_route_svg bin/draw_route_svg bin/bbox_brim_query bin/uncgi bin/escape_xml
bin_script_public_transport =
cgi_bin_public_transport =
cgi_bin_script_public_transport = cgi-bin/draw-line cgi-bin/sketch-line cgi-bin/sketch-options cgi-bin/sketch-route
bin_convenience =
bin_script_convenience = bin/run_osm3s_minutely.sh bin/fetch_osc_and_apply.sh
cgi_bin_convenience =
cgi_bin_script_convenience = cgi-bin/ping cgi-bin/sitemap
dist_bin_SCRIPTS = \
  ${bin_script_mandatory} \
  ${bin_script_customoutput} \
  ${bin_script_clone} \
  ${bin_script_augmented_diffs} \
  ${bin_script_xapi_layer} \
  ${bin_script_openlayers} \
  ${bin_script_public_transport} \
  ${bin_script_convenience}

cgibindir = ${prefix}/cgi-bin
dist_cgibin_SCRIPTS = \
  ${cgi_bin_script_mandatory} \
  ${cgi_bin_script_customoutput} \
  ${cgi_bin_script_clone} \
  ${cgi_bin_script_augmented_diffs} \
  ${cgi_bin_script_xapi_layer} \
  ${cgi_bin_script_openlayers} \
  ${cgi_bin_script_public_transport} \
  ${cgi_bin_script_convenience}

templatesdir = ${prefix}/templates
templates_DATA = templates/default.wiki templates/base.wiki
noinst_LTLIBRARIES = libcore.la libdata.la libdispatcher.la libexpatwrapper.la libfrontend.la liboutput.la libsettings.la libweboutput.la
statements_dir = overpass_api/statements
statements_cc = ${statements_dir}/statement.cc ${statements_dir}/area_query.cc ${statements_dir}/around.cc ${statements_dir}/bbox_query.cc ${statements_dir}/changed.cc ${statements_dir}/coord_query.cc ${statements_dir}/difference.cc ${statements_dir}/foreach.cc ${statements_dir}/id_query.cc ${statements_dir}/item.cc ${statements_dir}/make_area.cc ${statements_dir}/map_to_area.cc ${statements_dir}/newer.cc ${statements_dir}/osm_script.cc ${statements_dir}/pivot.cc ${statements_dir}/polygon_query.cc ${statements_dir}/print.cc ${statements_dir}/query.cc ${statements_dir}/recurse.cc ${statements_dir}/union.cc ${statements_dir}/user.cc overpass_api/frontend/print_target.cc expat/escape_xml.cc
libcore_la_SOURCES = overpass_api/frontend/map_ql_parser.cc overpass_api/statements/statement_dump.cc expat/map_ql_input.cc
libcore_la_LIBADD = libdispatcher.la libexpatwrapper.la libsettings.la libweboutput.la
libdata_la_SOURCES = overpass_api/data/collect_members.cc
libdata_la_LIBADD =
libdispatcher_la_SOURCES = template_db/dispatcher.cc overpass_api/dispatch/resource_manager.cc overpass_api/osm-backend/area_updater.cc
libdispatcher_la_LIBADD = -lrt
libexpatwrapper_la_SOURCES = expat/expat_justparse_interface.cc
libexpatwrapper_la_LIBADD = -lexpat
libfrontend_la_SOURCES = overpass_api/frontend/cgi-helper.cc overpass_api/frontend/user_interface.cc
libfrontend_la_LIBADD = liboutput.la
liboutput_la_SOURCES = overpass_api/frontend/output.cc
liboutput_la_LIBADD =
libsettings_la_SOURCES = overpass_api/core/settings.cc
libsettings_la_LIBADD =
# libstatements_la_SOURCES = ${statements_cc}
# libstatements_la_LIBADD = libdata.la
libweboutput_la_SOURCES = overpass_api/frontend/web_output.cc
libweboutput_la_LIBADD = libfrontend.la
osm_updater_cc = overpass_api/osm-backend/meta_updater.cc overpass_api/osm-backend/basic_updater.cc overpass_api/osm-backend/node_updater.cc overpass_api/osm-backend/way_updater.cc overpass_api/osm-backend/relation_updater.cc overpass_api/osm-backend/osm_updater.cc expat/escape_xml.cc
bin_update_database_SOURCES = ${osm_updater_cc} overpass_api/osm-backend/update_database.cc template_db/types.cc
bin_update_database_LDADD = libdata.la libdispatcher.la libexpatwrapper.la liboutput.la libsettings.la
bin_update_from_dir_SOURCES = ${osm_updater_cc} overpass_api/osm-backend/update_from_dir.cc template_db/types.cc
bin_update_from_dir_LDADD = libdata.la libdispatcher.la libexpatwrapper.la liboutput.la libsettings.la
bin_osm3s_query_SOURCES = ${statements_cc} overpass_api/frontend/console_output.cc overpass_api/dispatch/osm3s_query.cc overpass_api/osm-backend/clone_database.cc overpass_api/dispatch/scripting_core.cc overpass_api/dispatch/dispatcher_stub.cc template_db/types.cc
bin_osm3s_query_LDADD = libcore.la libdata.la
bin_dispatcher_SOURCES = overpass_api/dispatch/dispatcher_server.cc
bin_dispatcher_LDADD = libdispatcher.la libfrontend.la libsettings.la
cgi_bin_interpreter_SOURCES = ${statements_cc} overpass_api/dispatch/web_query.cc overpass_api/dispatch/scripting_core.cc overpass_api/dispatch/dispatcher_stub.cc template_db/types.cc
cgi_bin_interpreter_LDADD = libcore.la libdata.la
cgi_bin_timestamp_SOURCES = overpass_api/dispatch/db_timestamp.cc overpass_api/dispatch/dispatcher_stub.cc template_db/types.cc
cgi_bin_timestamp_LDADD = libdispatcher.la libsettings.la libweboutput.la
escape_xml_cc = expat/escape_xml.cc
bin_sketch_route_svg_SOURCES = ${escape_xml_cc} pt_diagrams/sketch-route-svg.cc pt_diagrams/processed_input.cc
bin_sketch_route_svg_LDADD = libexpatwrapper.la
bin_draw_route_svg_SOURCES = ${escape_xml_cc} pt_diagrams/read_input.cc pt_diagrams/topographic.cc
bin_draw_route_svg_LDADD = libexpatwrapper.la
bin_uncgi_SOURCES = pt_diagrams/uncgi.cc
bin_uncgi_LDADD =
bin_tocgi_SOURCES = pt_diagrams/tocgi.cc
bin_tocgi_LDADD =
bin_escape_xml_SOURCES = expat/escape_xml.cc expat/escape_xml_main.cc
bin_escape_xml_LDADD =
bin_bbox_brim_query_SOURCES = pt_diagrams/bbox-brim-query.cc
bin_bbox_brim_query_LDADD = libexpatwrapper.la
bin_translate_xapi_SOURCES = expat/translate_xapi.cc expat/escape_xml.cc
bin_translate_xapi_LDADD =
bin_process_augmented_diffs_SOURCES = expat/process_augmented_diffs.cc expat/escape_xml.cc
bin_process_augmented_diffs_LDADD = libexpatwrapper.la

# Put test-bin here and test-bin/Makefile in configure.ac to activate test-bin
SUBDIRS =
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then rm -f stamp-h1; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) stamp-h1; else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps)
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libcore.la: $(libcore_la_OBJECTS) $(libcore_la_DEPENDENCIES) $(EXTRA_libcore_la_DEPENDENCIES)
	$(CXXLINK)  $(libcore_la_OBJECTS) $(libcore_la_LIBADD) $(LIBS)
libdata.la: $(libdata_la_OBJECTS) $(libdata_la_DEPENDENCIES) $(EXTRA_libdata_la_DEPENDENCIES)
	$(CXXLINK)  $(libdata_la_OBJECTS) $(libdata_la_LIBADD) $(LIBS)
libdispatcher.la: $(libdispatcher_la_OBJECTS) $(libdispatcher_la_DEPENDENCIES) $(EXTRA_libdispatcher_la_DEPENDENCIES)
	$(CXXLINK)  $(libdispatcher_la_OBJECTS) $(libdispatcher_la_LIBADD) $(LIBS)
libexpatwrapper.la: $(libexpatwrapper_la_OBJECTS) $(libexpatwrapper_la_DEPENDENCIES) $(EXTRA_libexpatwrapper_la_DEPENDENCIES)
	$(CXXLINK)  $(libexpatwrapper_la_OBJECTS) $(libexpatwrapper_la_LIBADD) $(LIBS)
libfrontend.la: $(libfrontend_la_OBJECTS) $(libfrontend_la_DEPENDENCIES) $(EXTRA_libfrontend_la_DEPENDENCIES)
	$(CXXLINK)  $(libfrontend_la_OBJECTS) $(libfrontend_la_LIBADD) $(LIBS)
liboutput.la: $(liboutput_la_OBJECTS) $(liboutput_la_DEPENDENCIES) $(EXTRA_liboutput_la_DEPENDENCIES)
	$(CXXLINK)  $(liboutput_la_OBJECTS) $(liboutput_la_LIBADD) $(LIBS)
libsettings.la: $(libsettings_la_OBJECTS) $(libsettings_la_DEPENDENCIES) $(EXTRA_libsettings_la_DEPENDENCIES)
	$(CXXLINK)  $(libsettings_la_OBJECTS) $(libsettings_la_LIBADD) $(LIBS)
libweboutput.la: $(libweboutput_la_OBJECTS) $(libweboutput_la_DEPENDENCIES) $(EXTRA_libweboutput_la_DEPENDENCIES)
	$(CXXLINK)  $(libweboutput_la_OBJECTS) $(libweboutput_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
install-cgibinPROGRAMS: $(cgibin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(cgibin_PROGRAMS)'; test -n "$(cgibindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(cgibindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(cgibindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(cgibindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(cgibindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-cgibinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(cgibin_PROGRAMS)'; test -n "$(cgibindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(cgibindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(cgibindir)" && rm -f $$files

clean-cgibinPROGRAMS:
	@list='$(cgibin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
bin/$(am__dirstamp):
	@$(MKDIR_P) bin
	@: > bin/$(am__dirstamp)
bin/bbox_brim_query$(EXEEXT): $(bin_bbox_brim_query_OBJECTS) $(bin_bbox_brim_query_DEPENDENCIES) $(EXTRA_bin_bbox_brim_query_DEPENDENCIES) bin/$(am__dirstamp)
	@rm -f bin/bbox_brim_query$(EXEEXT)
	$(CXXLINK) $(bin_bbox_brim_query_OBJECTS) $(bin_bbox_brim_query_LDADD) $(LIBS)
bin/dispatcher$(EXEEXT): $(bin_dispatcher_OBJECTS) $(bin_dispatcher_DEPENDENCIES) $(EXTRA_bin_dispatcher_DEPENDENCIES) bin/$(am__dirstamp)
	@rm -f bin/dispatcher$(EXEEXT)
	$(CXXLINK) $(bin_dispatcher_OBJECTS) $(bin_dispatcher_LDADD) $(LIBS)
bin/draw_route_svg$(EXEEXT): $(bin_draw_route_svg_OBJECTS) $(bin_draw_route_svg_DEPENDENCIES) $(EXTRA_bin_draw_route_svg_DEPENDENCIES) bin/$(am__dirstamp)
	@rm -f bin/draw_route_svg$(EXEEXT)
	$(CXXLINK) $(bin_draw_route_svg_OBJECTS) $(bin_draw_route_svg_LDADD) $(LIBS)
bin/escape_xml$(EXEEXT): $(bin_escape_xml_OBJECTS) $(bin_escape_xml_DEPENDENCIES) $(EXTRA_bin_escape_xml_DEPENDENCIES) bin/$(am__dirstamp)
	@rm -f bin/escape_xml$(EXEEXT)
	$(CXXLINK) $(bin_escape_xml_OBJECTS) $(bin_escape_xml_LDADD) $(LIBS)
bin/osm3s_query$(EXEEXT): $(bin_osm3s_query_OBJECTS) $(bin_osm3s_query_DEPENDENCIES) $(EXTRA_bin_osm3s_query_DEPENDENCIES) bin/$(am__dirstamp)
	@rm -f bin/osm3s_query$(EXEEXT)
	$(CXXLINK) $(bin_osm3s_query_OBJECTS) $(bin_osm3s_query_LDADD) $(LIBS)
bin/process_augmented_diffs$(EXEEXT): $(bin_process_augmented_diffs_OBJECTS) $(bin_process_augmented_diffs_DEPENDENCIES) $(EXTRA_bin_process_augmented_diffs_DEPENDENCIES) bin/$(am__dirstamp)
	@rm -f bin/process_augmented_diffs$(EXEEXT)
	$(CXXLINK) $(bin_process_augmented_diffs_OBJECTS) $(bin_process_augmented_diffs_LDADD) $(LIBS)
bin/sketch_route_svg$(EXEEXT): $(bin_sketch_route_svg_OBJECTS) $(bin_sketch_route_svg_DEPENDENCIES) $(EXTRA_bin_sketch_route_svg_DEPENDENCIES) bin/$(am__dirstamp)
	@rm -f bin/sketch_route_svg$(EXEEXT)
	$(CXXLINK) $(bin_sketch_route_svg_OBJECTS) $(bin_sketch_route_svg_LDADD) $(LIBS)
bin/tocgi$(EXEEXT): $(bin_tocgi_OBJECTS) $(bin_tocgi_DEPENDENCIES) $(EXTRA_bin_tocgi_DEPENDENCIES) bin/$(am__dirstamp)
	@rm -f bin/tocgi$(EXEEXT)
	$(CXXLINK) $(bin_tocgi_OBJECTS) $(bin_tocgi_LDADD) $(LIBS)
bin/translate_xapi$(EXEEXT): $(bin_translate_xapi_OBJECTS) $(bin_translate_xapi_DEPENDENCIES) $(EXTRA_bin_translate_xapi_DEPENDENCIES) bin/$(am__dirstamp)
	@rm -f bin/translate_xapi$(EXEEXT)
	$(CXXLINK) $(bin_translate_xapi_OBJECTS) $(bin_translate_xapi_LDADD) $(LIBS)
bin/uncgi$(EXEEXT): $(bin_uncgi_OBJECTS) $(bin_uncgi_DEPENDENCIES) $(EXTRA_bin_uncgi_DEPENDENCIES) bin/$(am__dirstamp)
	@rm -f bin/uncgi$(EXEEXT)
	$(CXXLINK) $(bin_uncgi_OBJECTS) $(bin_uncgi_LDADD) $(LIBS)
bin/update_database$(EXEEXT): $(bin_update_database_OBJECTS) $(bin_update_database_DEPENDENCIES) $(EXTRA_bin_update_database_DEPENDENCIES) bin/$(am__dirstamp)
	@rm -f bin/update_database$(EXEEXT)
	$(CXXLINK) $(bin_update_database_OBJECTS) $(bin_update_database_LDADD) $(LIBS)
bin/update_from_dir$(EXEEXT): $(bin_update_from_dir_OBJECTS) $(bin_update_from_dir_DEPENDENCIES) $(EXTRA_bin_update_from_dir_DEPENDENCIES) bin/$(am__dirstamp)
	@rm -f bin/update_from_dir$(EXEEXT)
	$(CXXLINK) $(bin_update_from_dir_OBJECTS) $(bin_update_from_dir_LDADD) $(LIBS)
cgi-bin/$(am__dirstamp):
	@$(MKDIR_P) cgi-bin
	@: > cgi-bin/$(am__dirstamp)
cgi-bin/interpreter$(EXEEXT): $(cgi_bin_interpreter_OBJECTS) $(cgi_bin_interpreter_DEPENDENCIES) $(EXTRA_cgi_bin_interpreter_DEPENDENCIES) cgi-bin/$(am__dirstamp)
	@rm -f cgi-bin/interpreter$(EXEEXT)
	$(CXXLINK) $(cgi_bin_interpreter_OBJECTS) $(cgi_bin_interpreter_LDADD) $(LIBS)
cgi-bin/timestamp$(EXEEXT): $(cgi_bin_timestamp_OBJECTS) $(cgi_bin_timestamp_DEPENDENCIES) $(EXTRA_cgi_bin_timestamp_DEPENDENCIES) cgi-bin/$(am__dirstamp)
	@rm -f cgi-bin/timestamp$(EXEEXT)
	$(CXXLINK) $(cgi_bin_timestamp_OBJECTS) $(cgi_bin_timestamp_LDADD) $(LIBS)
install-dist_binSCRIPTS: $(dist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)
install-dist_cgibinSCRIPTS: $(dist_cgibin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(dist_cgibin_SCRIPTS)'; test -n "$(cgibindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(cgibindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(cgibindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(cgibindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(cgibindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_cgibinSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_cgibin_SCRIPTS)'; test -n "$(cgibindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(cgibindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/area_query.Po
include ./$(DEPDIR)/area_updater.Plo
include ./$(DEPDIR)/around.Po
include ./$(DEPDIR)/basic_updater.Po
include ./$(DEPDIR)/bbox-brim-query.Po
include ./$(DEPDIR)/bbox_query.Po
include ./$(DEPDIR)/cgi-helper.Plo
include ./$(DEPDIR)/changed.Po
include ./$(DEPDIR)/clone_database.Po
include ./$(DEPDIR)/collect_members.Plo
include ./$(DEPDIR)/console_output.Po
include ./$(DEPDIR)/coord_query.Po
include ./$(DEPDIR)/db_timestamp.Po
include ./$(DEPDIR)/difference.Po
include ./$(DEPDIR)/dispatcher.Plo
include ./$(DEPDIR)/dispatcher_server.Po
include ./$(DEPDIR)/dispatcher_stub.Po
include ./$(DEPDIR)/escape_xml.Po
include ./$(DEPDIR)/escape_xml_main.Po
include ./$(DEPDIR)/expat_justparse_interface.Plo
include ./$(DEPDIR)/foreach.Po
include ./$(DEPDIR)/id_query.Po
include ./$(DEPDIR)/item.Po
include ./$(DEPDIR)/make_area.Po
include ./$(DEPDIR)/map_ql_input.Plo
include ./$(DEPDIR)/map_ql_parser.Plo
include ./$(DEPDIR)/map_to_area.Po
include ./$(DEPDIR)/meta_updater.Po
include ./$(DEPDIR)/newer.Po
include ./$(DEPDIR)/node_updater.Po
include ./$(DEPDIR)/osm3s_query.Po
include ./$(DEPDIR)/osm_script.Po
include ./$(DEPDIR)/osm_updater.Po
include ./$(DEPDIR)/output.Plo
include ./$(DEPDIR)/pivot.Po
include ./$(DEPDIR)/polygon_query.Po
include ./$(DEPDIR)/print.Po
include ./$(DEPDIR)/print_target.Po
include ./$(DEPDIR)/process_augmented_diffs.Po
include ./$(DEPDIR)/processed_input.Po
include ./$(DEPDIR)/query.Po
include ./$(DEPDIR)/read_input.Po
include ./$(DEPDIR)/recurse.Po
include ./$(DEPDIR)/relation_updater.Po
include ./$(DEPDIR)/resource_manager.Plo
include ./$(DEPDIR)/scripting_core.Po
include ./$(DEPDIR)/settings.Plo
include ./$(DEPDIR)/sketch-route-svg.Po
include ./$(DEPDIR)/statement.Po
include ./$(DEPDIR)/statement_dump.Plo
include ./$(DEPDIR)/tocgi.Po
include ./$(DEPDIR)/topographic.Po
include ./$(DEPDIR)/translate_xapi.Po
include ./$(DEPDIR)/types.Po
include ./$(DEPDIR)/uncgi.Po
include ./$(DEPDIR)/union.Po
include ./$(DEPDIR)/update_database.Po
include ./$(DEPDIR)/update_from_dir.Po
include ./$(DEPDIR)/user.Po
include ./$(DEPDIR)/user_interface.Plo
include ./$(DEPDIR)/way_updater.Po
include ./$(DEPDIR)/web_output.Plo
include ./$(DEPDIR)/web_query.Po

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

map_ql_parser.lo: overpass_api/frontend/map_ql_parser.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT map_ql_parser.lo -MD -MP -MF $(DEPDIR)/map_ql_parser.Tpo -c -o map_ql_parser.lo `test -f 'overpass_api/frontend/map_ql_parser.cc' || echo '$(srcdir)/'`overpass_api/frontend/map_ql_parser.cc
	$(am__mv) $(DEPDIR)/map_ql_parser.Tpo $(DEPDIR)/map_ql_parser.Plo
#	source='overpass_api/frontend/map_ql_parser.cc' object='map_ql_parser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o map_ql_parser.lo `test -f 'overpass_api/frontend/map_ql_parser.cc' || echo '$(srcdir)/'`overpass_api/frontend/map_ql_parser.cc

statement_dump.lo: overpass_api/statements/statement_dump.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT statement_dump.lo -MD -MP -MF $(DEPDIR)/statement_dump.Tpo -c -o statement_dump.lo `test -f 'overpass_api/statements/statement_dump.cc' || echo '$(srcdir)/'`overpass_api/statements/statement_dump.cc
	$(am__mv) $(DEPDIR)/statement_dump.Tpo $(DEPDIR)/statement_dump.Plo
#	source='overpass_api/statements/statement_dump.cc' object='statement_dump.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o statement_dump.lo `test -f 'overpass_api/statements/statement_dump.cc' || echo '$(srcdir)/'`overpass_api/statements/statement_dump.cc

map_ql_input.lo: expat/map_ql_input.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT map_ql_input.lo -MD -MP -MF $(DEPDIR)/map_ql_input.Tpo -c -o map_ql_input.lo `test -f 'expat/map_ql_input.cc' || echo '$(srcdir)/'`expat/map_ql_input.cc
	$(am__mv) $(DEPDIR)/map_ql_input.Tpo $(DEPDIR)/map_ql_input.Plo
#	source='expat/map_ql_input.cc' object='map_ql_input.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o map_ql_input.lo `test -f 'expat/map_ql_input.cc' || echo '$(srcdir)/'`expat/map_ql_input.cc

collect_members.lo: overpass_api/data/collect_members.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT collect_members.lo -MD -MP -MF $(DEPDIR)/collect_members.Tpo -c -o collect_members.lo `test -f 'overpass_api/data/collect_members.cc' || echo '$(srcdir)/'`overpass_api/data/collect_members.cc
	$(am__mv) $(DEPDIR)/collect_members.Tpo $(DEPDIR)/collect_members.Plo
#	source='overpass_api/data/collect_members.cc' object='collect_members.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o collect_members.lo `test -f 'overpass_api/data/collect_members.cc' || echo '$(srcdir)/'`overpass_api/data/collect_members.cc

dispatcher.lo: template_db/dispatcher.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dispatcher.lo -MD -MP -MF $(DEPDIR)/dispatcher.Tpo -c -o dispatcher.lo `test -f 'template_db/dispatcher.cc' || echo '$(srcdir)/'`template_db/dispatcher.cc
	$(am__mv) $(DEPDIR)/dispatcher.Tpo $(DEPDIR)/dispatcher.Plo
#	source='template_db/dispatcher.cc' object='dispatcher.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dispatcher.lo `test -f 'template_db/dispatcher.cc' || echo '$(srcdir)/'`template_db/dispatcher.cc

resource_manager.lo: overpass_api/dispatch/resource_manager.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT resource_manager.lo -MD -MP -MF $(DEPDIR)/resource_manager.Tpo -c -o resource_manager.lo `test -f 'overpass_api/dispatch/resource_manager.cc' || echo '$(srcdir)/'`overpass_api/dispatch/resource_manager.cc
	$(am__mv) $(DEPDIR)/resource_manager.Tpo $(DEPDIR)/resource_manager.Plo
#	source='overpass_api/dispatch/resource_manager.cc' object='resource_manager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o resource_manager.lo `test -f 'overpass_api/dispatch/resource_manager.cc' || echo '$(srcdir)/'`overpass_api/dispatch/resource_manager.cc

area_updater.lo: overpass_api/osm-backend/area_updater.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT area_updater.lo -MD -MP -MF $(DEPDIR)/area_updater.Tpo -c -o area_updater.lo `test -f 'overpass_api/osm-backend/area_updater.cc' || echo '$(srcdir)/'`overpass_api/osm-backend/area_updater.cc
	$(am__mv) $(DEPDIR)/area_updater.Tpo $(DEPDIR)/area_updater.Plo
#	source='overpass_api/osm-backend/area_updater.cc' object='area_updater.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o area_updater.lo `test -f 'overpass_api/osm-backend/area_updater.cc' || echo '$(srcdir)/'`overpass_api/osm-backend/area_updater.cc

expat_justparse_interface.lo: expat/expat_justparse_interface.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT expat_justparse_interface.lo -MD -MP -MF $(DEPDIR)/expat_justparse_interface.Tpo -c -o expat_justparse_interface.lo `test -f 'expat/expat_justparse_interface.cc' || echo '$(srcdir)/'`expat/expat_justparse_interface.cc
	$(am__mv) $(DEPDIR)/expat_justparse_interface.Tpo $(DEPDIR)/expat_justparse_interface.Plo
#	source='expat/expat_justparse_interface.cc' object='expat_justparse_interface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o expat_justparse_interface.lo `test -f 'expat/expat_justparse_interface.cc' || echo '$(srcdir)/'`expat/expat_justparse_interface.cc

cgi-helper.lo: overpass_api/frontend/cgi-helper.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cgi-helper.lo -MD -MP -MF $(DEPDIR)/cgi-helper.Tpo -c -o cgi-helper.lo `test -f 'overpass_api/frontend/cgi-helper.cc' || echo '$(srcdir)/'`overpass_api/frontend/cgi-helper.cc
	$(am__mv) $(DEPDIR)/cgi-helper.Tpo $(DEPDIR)/cgi-helper.Plo
#	source='overpass_api/frontend/cgi-helper.cc' object='cgi-helper.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cgi-helper.lo `test -f 'overpass_api/frontend/cgi-helper.cc' || echo '$(srcdir)/'`overpass_api/frontend/cgi-helper.cc

user_interface.lo: overpass_api/frontend/user_interface.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT user_interface.lo -MD -MP -MF $(DEPDIR)/user_interface.Tpo -c -o user_interface.lo `test -f 'overpass_api/frontend/user_interface.cc' || echo '$(srcdir)/'`overpass_api/frontend/user_interface.cc
	$(am__mv) $(DEPDIR)/user_interface.Tpo $(DEPDIR)/user_interface.Plo
#	source='overpass_api/frontend/user_interface.cc' object='user_interface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o user_interface.lo `test -f 'overpass_api/frontend/user_interface.cc' || echo '$(srcdir)/'`overpass_api/frontend/user_interface.cc

output.lo: overpass_api/frontend/output.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT output.lo -MD -MP -MF $(DEPDIR)/output.Tpo -c -o output.lo `test -f 'overpass_api/frontend/output.cc' || echo '$(srcdir)/'`overpass_api/frontend/output.cc
	$(am__mv) $(DEPDIR)/output.Tpo $(DEPDIR)/output.Plo
#	source='overpass_api/frontend/output.cc' object='output.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o output.lo `test -f 'overpass_api/frontend/output.cc' || echo '$(srcdir)/'`overpass_api/frontend/output.cc

settings.lo: overpass_api/core/settings.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT settings.lo -MD -MP -MF $(DEPDIR)/settings.Tpo -c -o settings.lo `test -f 'overpass_api/core/settings.cc' || echo '$(srcdir)/'`overpass_api/core/settings.cc
	$(am__mv) $(DEPDIR)/settings.Tpo $(DEPDIR)/settings.Plo
#	source='overpass_api/core/settings.cc' object='settings.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o settings.lo `test -f 'overpass_api/core/settings.cc' || echo '$(srcdir)/'`overpass_api/core/settings.cc

web_output.lo: overpass_api/frontend/web_output.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT web_output.lo -MD -MP -MF $(DEPDIR)/web_output.Tpo -c -o web_output.lo `test -f 'overpass_api/frontend/web_output.cc' || echo '$(srcdir)/'`overpass_api/frontend/web_output.cc
	$(am__mv) $(DEPDIR)/web_output.Tpo $(DEPDIR)/web_output.Plo
#	source='overpass_api/frontend/web_output.cc' object='web_output.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o web_output.lo `test -f 'overpass_api/frontend/web_output.cc' || echo '$(srcdir)/'`overpass_api/frontend/web_output.cc

bbox-brim-query.o: pt_diagrams/bbox-brim-query.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bbox-brim-query.o -MD -MP -MF $(DEPDIR)/bbox-brim-query.Tpo -c -o bbox-brim-query.o `test -f 'pt_diagrams/bbox-brim-query.cc' || echo '$(srcdir)/'`pt_diagrams/bbox-brim-query.cc
	$(am__mv) $(DEPDIR)/bbox-brim-query.Tpo $(DEPDIR)/bbox-brim-query.Po
#	source='pt_diagrams/bbox-brim-query.cc' object='bbox-brim-query.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bbox-brim-query.o `test -f 'pt_diagrams/bbox-brim-query.cc' || echo '$(srcdir)/'`pt_diagrams/bbox-brim-query.cc

bbox-brim-query.obj: pt_diagrams/bbox-brim-query.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bbox-brim-query.obj -MD -MP -MF $(DEPDIR)/bbox-brim-query.Tpo -c -o bbox-brim-query.obj `if test -f 'pt_diagrams/bbox-brim-query.cc'; then $(CYGPATH_W) 'pt_diagrams/bbox-brim-query.cc'; else $(CYGPATH_W) '$(srcdir)/pt_diagrams/bbox-brim-query.cc'; fi`
	$(am__mv) $(DEPDIR)/bbox-brim-query.Tpo $(DEPDIR)/bbox-brim-query.Po
#	source='pt_diagrams/bbox-brim-query.cc' object='bbox-brim-query.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bbox-brim-query.obj `if test -f 'pt_diagrams/bbox-brim-query.cc'; then $(CYGPATH_W) 'pt_diagrams/bbox-brim-query.cc'; else $(CYGPATH_W) '$(srcdir)/pt_diagrams/bbox-brim-query.cc'; fi`

dispatcher_server.o: overpass_api/dispatch/dispatcher_server.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dispatcher_server.o -MD -MP -MF $(DEPDIR)/dispatcher_server.Tpo -c -o dispatcher_server.o `test -f 'overpass_api/dispatch/dispatcher_server.cc' || echo '$(srcdir)/'`overpass_api/dispatch/dispatcher_server.cc
	$(am__mv) $(DEPDIR)/dispatcher_server.Tpo $(DEPDIR)/dispatcher_server.Po
#	source='overpass_api/dispatch/dispatcher_server.cc' object='dispatcher_server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dispatcher_server.o `test -f 'overpass_api/dispatch/dispatcher_server.cc' || echo '$(srcdir)/'`overpass_api/dispatch/dispatcher_server.cc

dispatcher_server.obj: overpass_api/dispatch/dispatcher_server.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dispatcher_server.obj -MD -MP -MF $(DEPDIR)/dispatcher_server.Tpo -c -o dispatcher_server.obj `if test -f 'overpass_api/dispatch/dispatcher_server.cc'; then $(CYGPATH_W) 'overpass_api/dispatch/dispatcher_server.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/dispatch/dispatcher_server.cc'; fi`
	$(am__mv) $(DEPDIR)/dispatcher_server.Tpo $(DEPDIR)/dispatcher_server.Po
#	source='overpass_api/dispatch/dispatcher_server.cc' object='dispatcher_server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dispatcher_server.obj `if test -f 'overpass_api/dispatch/dispatcher_server.cc'; then $(CYGPATH_W) 'overpass_api/dispatch/dispatcher_server.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/dispatch/dispatcher_server.cc'; fi`

escape_xml.o: expat/escape_xml.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT escape_xml.o -MD -MP -MF $(DEPDIR)/escape_xml.Tpo -c -o escape_xml.o `test -f 'expat/escape_xml.cc' || echo '$(srcdir)/'`expat/escape_xml.cc
	$(am__mv) $(DEPDIR)/escape_xml.Tpo $(DEPDIR)/escape_xml.Po
#	source='expat/escape_xml.cc' object='escape_xml.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o escape_xml.o `test -f 'expat/escape_xml.cc' || echo '$(srcdir)/'`expat/escape_xml.cc

escape_xml.obj: expat/escape_xml.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT escape_xml.obj -MD -MP -MF $(DEPDIR)/escape_xml.Tpo -c -o escape_xml.obj `if test -f 'expat/escape_xml.cc'; then $(CYGPATH_W) 'expat/escape_xml.cc'; else $(CYGPATH_W) '$(srcdir)/expat/escape_xml.cc'; fi`
	$(am__mv) $(DEPDIR)/escape_xml.Tpo $(DEPDIR)/escape_xml.Po
#	source='expat/escape_xml.cc' object='escape_xml.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o escape_xml.obj `if test -f 'expat/escape_xml.cc'; then $(CYGPATH_W) 'expat/escape_xml.cc'; else $(CYGPATH_W) '$(srcdir)/expat/escape_xml.cc'; fi`

read_input.o: pt_diagrams/read_input.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT read_input.o -MD -MP -MF $(DEPDIR)/read_input.Tpo -c -o read_input.o `test -f 'pt_diagrams/read_input.cc' || echo '$(srcdir)/'`pt_diagrams/read_input.cc
	$(am__mv) $(DEPDIR)/read_input.Tpo $(DEPDIR)/read_input.Po
#	source='pt_diagrams/read_input.cc' object='read_input.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o read_input.o `test -f 'pt_diagrams/read_input.cc' || echo '$(srcdir)/'`pt_diagrams/read_input.cc

read_input.obj: pt_diagrams/read_input.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT read_input.obj -MD -MP -MF $(DEPDIR)/read_input.Tpo -c -o read_input.obj `if test -f 'pt_diagrams/read_input.cc'; then $(CYGPATH_W) 'pt_diagrams/read_input.cc'; else $(CYGPATH_W) '$(srcdir)/pt_diagrams/read_input.cc'; fi`
	$(am__mv) $(DEPDIR)/read_input.Tpo $(DEPDIR)/read_input.Po
#	source='pt_diagrams/read_input.cc' object='read_input.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o read_input.obj `if test -f 'pt_diagrams/read_input.cc'; then $(CYGPATH_W) 'pt_diagrams/read_input.cc'; else $(CYGPATH_W) '$(srcdir)/pt_diagrams/read_input.cc'; fi`

topographic.o: pt_diagrams/topographic.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT topographic.o -MD -MP -MF $(DEPDIR)/topographic.Tpo -c -o topographic.o `test -f 'pt_diagrams/topographic.cc' || echo '$(srcdir)/'`pt_diagrams/topographic.cc
	$(am__mv) $(DEPDIR)/topographic.Tpo $(DEPDIR)/topographic.Po
#	source='pt_diagrams/topographic.cc' object='topographic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o topographic.o `test -f 'pt_diagrams/topographic.cc' || echo '$(srcdir)/'`pt_diagrams/topographic.cc

topographic.obj: pt_diagrams/topographic.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT topographic.obj -MD -MP -MF $(DEPDIR)/topographic.Tpo -c -o topographic.obj `if test -f 'pt_diagrams/topographic.cc'; then $(CYGPATH_W) 'pt_diagrams/topographic.cc'; else $(CYGPATH_W) '$(srcdir)/pt_diagrams/topographic.cc'; fi`
	$(am__mv) $(DEPDIR)/topographic.Tpo $(DEPDIR)/topographic.Po
#	source='pt_diagrams/topographic.cc' object='topographic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o topographic.obj `if test -f 'pt_diagrams/topographic.cc'; then $(CYGPATH_W) 'pt_diagrams/topographic.cc'; else $(CYGPATH_W) '$(srcdir)/pt_diagrams/topographic.cc'; fi`

escape_xml_main.o: expat/escape_xml_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT escape_xml_main.o -MD -MP -MF $(DEPDIR)/escape_xml_main.Tpo -c -o escape_xml_main.o `test -f 'expat/escape_xml_main.cc' || echo '$(srcdir)/'`expat/escape_xml_main.cc
	$(am__mv) $(DEPDIR)/escape_xml_main.Tpo $(DEPDIR)/escape_xml_main.Po
#	source='expat/escape_xml_main.cc' object='escape_xml_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o escape_xml_main.o `test -f 'expat/escape_xml_main.cc' || echo '$(srcdir)/'`expat/escape_xml_main.cc

escape_xml_main.obj: expat/escape_xml_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT escape_xml_main.obj -MD -MP -MF $(DEPDIR)/escape_xml_main.Tpo -c -o escape_xml_main.obj `if test -f 'expat/escape_xml_main.cc'; then $(CYGPATH_W) 'expat/escape_xml_main.cc'; else $(CYGPATH_W) '$(srcdir)/expat/escape_xml_main.cc'; fi`
	$(am__mv) $(DEPDIR)/escape_xml_main.Tpo $(DEPDIR)/escape_xml_main.Po
#	source='expat/escape_xml_main.cc' object='escape_xml_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o escape_xml_main.obj `if test -f 'expat/escape_xml_main.cc'; then $(CYGPATH_W) 'expat/escape_xml_main.cc'; else $(CYGPATH_W) '$(srcdir)/expat/escape_xml_main.cc'; fi`

statement.o: ${statements_dir}/statement.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT statement.o -MD -MP -MF $(DEPDIR)/statement.Tpo -c -o statement.o `test -f '${statements_dir}/statement.cc' || echo '$(srcdir)/'`${statements_dir}/statement.cc
	$(am__mv) $(DEPDIR)/statement.Tpo $(DEPDIR)/statement.Po
#	source='${statements_dir}/statement.cc' object='statement.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o statement.o `test -f '${statements_dir}/statement.cc' || echo '$(srcdir)/'`${statements_dir}/statement.cc

statement.obj: ${statements_dir}/statement.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT statement.obj -MD -MP -MF $(DEPDIR)/statement.Tpo -c -o statement.obj `if test -f '${statements_dir}/statement.cc'; then $(CYGPATH_W) '${statements_dir}/statement.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/statement.cc'; fi`
	$(am__mv) $(DEPDIR)/statement.Tpo $(DEPDIR)/statement.Po
#	source='${statements_dir}/statement.cc' object='statement.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o statement.obj `if test -f '${statements_dir}/statement.cc'; then $(CYGPATH_W) '${statements_dir}/statement.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/statement.cc'; fi`

area_query.o: ${statements_dir}/area_query.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT area_query.o -MD -MP -MF $(DEPDIR)/area_query.Tpo -c -o area_query.o `test -f '${statements_dir}/area_query.cc' || echo '$(srcdir)/'`${statements_dir}/area_query.cc
	$(am__mv) $(DEPDIR)/area_query.Tpo $(DEPDIR)/area_query.Po
#	source='${statements_dir}/area_query.cc' object='area_query.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o area_query.o `test -f '${statements_dir}/area_query.cc' || echo '$(srcdir)/'`${statements_dir}/area_query.cc

area_query.obj: ${statements_dir}/area_query.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT area_query.obj -MD -MP -MF $(DEPDIR)/area_query.Tpo -c -o area_query.obj `if test -f '${statements_dir}/area_query.cc'; then $(CYGPATH_W) '${statements_dir}/area_query.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/area_query.cc'; fi`
	$(am__mv) $(DEPDIR)/area_query.Tpo $(DEPDIR)/area_query.Po
#	source='${statements_dir}/area_query.cc' object='area_query.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o area_query.obj `if test -f '${statements_dir}/area_query.cc'; then $(CYGPATH_W) '${statements_dir}/area_query.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/area_query.cc'; fi`

around.o: ${statements_dir}/around.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT around.o -MD -MP -MF $(DEPDIR)/around.Tpo -c -o around.o `test -f '${statements_dir}/around.cc' || echo '$(srcdir)/'`${statements_dir}/around.cc
	$(am__mv) $(DEPDIR)/around.Tpo $(DEPDIR)/around.Po
#	source='${statements_dir}/around.cc' object='around.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o around.o `test -f '${statements_dir}/around.cc' || echo '$(srcdir)/'`${statements_dir}/around.cc

around.obj: ${statements_dir}/around.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT around.obj -MD -MP -MF $(DEPDIR)/around.Tpo -c -o around.obj `if test -f '${statements_dir}/around.cc'; then $(CYGPATH_W) '${statements_dir}/around.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/around.cc'; fi`
	$(am__mv) $(DEPDIR)/around.Tpo $(DEPDIR)/around.Po
#	source='${statements_dir}/around.cc' object='around.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o around.obj `if test -f '${statements_dir}/around.cc'; then $(CYGPATH_W) '${statements_dir}/around.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/around.cc'; fi`

bbox_query.o: ${statements_dir}/bbox_query.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bbox_query.o -MD -MP -MF $(DEPDIR)/bbox_query.Tpo -c -o bbox_query.o `test -f '${statements_dir}/bbox_query.cc' || echo '$(srcdir)/'`${statements_dir}/bbox_query.cc
	$(am__mv) $(DEPDIR)/bbox_query.Tpo $(DEPDIR)/bbox_query.Po
#	source='${statements_dir}/bbox_query.cc' object='bbox_query.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bbox_query.o `test -f '${statements_dir}/bbox_query.cc' || echo '$(srcdir)/'`${statements_dir}/bbox_query.cc

bbox_query.obj: ${statements_dir}/bbox_query.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bbox_query.obj -MD -MP -MF $(DEPDIR)/bbox_query.Tpo -c -o bbox_query.obj `if test -f '${statements_dir}/bbox_query.cc'; then $(CYGPATH_W) '${statements_dir}/bbox_query.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/bbox_query.cc'; fi`
	$(am__mv) $(DEPDIR)/bbox_query.Tpo $(DEPDIR)/bbox_query.Po
#	source='${statements_dir}/bbox_query.cc' object='bbox_query.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bbox_query.obj `if test -f '${statements_dir}/bbox_query.cc'; then $(CYGPATH_W) '${statements_dir}/bbox_query.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/bbox_query.cc'; fi`

changed.o: ${statements_dir}/changed.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT changed.o -MD -MP -MF $(DEPDIR)/changed.Tpo -c -o changed.o `test -f '${statements_dir}/changed.cc' || echo '$(srcdir)/'`${statements_dir}/changed.cc
	$(am__mv) $(DEPDIR)/changed.Tpo $(DEPDIR)/changed.Po
#	source='${statements_dir}/changed.cc' object='changed.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o changed.o `test -f '${statements_dir}/changed.cc' || echo '$(srcdir)/'`${statements_dir}/changed.cc

changed.obj: ${statements_dir}/changed.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT changed.obj -MD -MP -MF $(DEPDIR)/changed.Tpo -c -o changed.obj `if test -f '${statements_dir}/changed.cc'; then $(CYGPATH_W) '${statements_dir}/changed.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/changed.cc'; fi`
	$(am__mv) $(DEPDIR)/changed.Tpo $(DEPDIR)/changed.Po
#	source='${statements_dir}/changed.cc' object='changed.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o changed.obj `if test -f '${statements_dir}/changed.cc'; then $(CYGPATH_W) '${statements_dir}/changed.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/changed.cc'; fi`

coord_query.o: ${statements_dir}/coord_query.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coord_query.o -MD -MP -MF $(DEPDIR)/coord_query.Tpo -c -o coord_query.o `test -f '${statements_dir}/coord_query.cc' || echo '$(srcdir)/'`${statements_dir}/coord_query.cc
	$(am__mv) $(DEPDIR)/coord_query.Tpo $(DEPDIR)/coord_query.Po
#	source='${statements_dir}/coord_query.cc' object='coord_query.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coord_query.o `test -f '${statements_dir}/coord_query.cc' || echo '$(srcdir)/'`${statements_dir}/coord_query.cc

coord_query.obj: ${statements_dir}/coord_query.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT coord_query.obj -MD -MP -MF $(DEPDIR)/coord_query.Tpo -c -o coord_query.obj `if test -f '${statements_dir}/coord_query.cc'; then $(CYGPATH_W) '${statements_dir}/coord_query.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/coord_query.cc'; fi`
	$(am__mv) $(DEPDIR)/coord_query.Tpo $(DEPDIR)/coord_query.Po
#	source='${statements_dir}/coord_query.cc' object='coord_query.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coord_query.obj `if test -f '${statements_dir}/coord_query.cc'; then $(CYGPATH_W) '${statements_dir}/coord_query.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/coord_query.cc'; fi`

difference.o: ${statements_dir}/difference.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT difference.o -MD -MP -MF $(DEPDIR)/difference.Tpo -c -o difference.o `test -f '${statements_dir}/difference.cc' || echo '$(srcdir)/'`${statements_dir}/difference.cc
	$(am__mv) $(DEPDIR)/difference.Tpo $(DEPDIR)/difference.Po
#	source='${statements_dir}/difference.cc' object='difference.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o difference.o `test -f '${statements_dir}/difference.cc' || echo '$(srcdir)/'`${statements_dir}/difference.cc

difference.obj: ${statements_dir}/difference.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT difference.obj -MD -MP -MF $(DEPDIR)/difference.Tpo -c -o difference.obj `if test -f '${statements_dir}/difference.cc'; then $(CYGPATH_W) '${statements_dir}/difference.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/difference.cc'; fi`
	$(am__mv) $(DEPDIR)/difference.Tpo $(DEPDIR)/difference.Po
#	source='${statements_dir}/difference.cc' object='difference.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o difference.obj `if test -f '${statements_dir}/difference.cc'; then $(CYGPATH_W) '${statements_dir}/difference.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/difference.cc'; fi`

foreach.o: ${statements_dir}/foreach.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT foreach.o -MD -MP -MF $(DEPDIR)/foreach.Tpo -c -o foreach.o `test -f '${statements_dir}/foreach.cc' || echo '$(srcdir)/'`${statements_dir}/foreach.cc
	$(am__mv) $(DEPDIR)/foreach.Tpo $(DEPDIR)/foreach.Po
#	source='${statements_dir}/foreach.cc' object='foreach.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o foreach.o `test -f '${statements_dir}/foreach.cc' || echo '$(srcdir)/'`${statements_dir}/foreach.cc

foreach.obj: ${statements_dir}/foreach.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT foreach.obj -MD -MP -MF $(DEPDIR)/foreach.Tpo -c -o foreach.obj `if test -f '${statements_dir}/foreach.cc'; then $(CYGPATH_W) '${statements_dir}/foreach.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/foreach.cc'; fi`
	$(am__mv) $(DEPDIR)/foreach.Tpo $(DEPDIR)/foreach.Po
#	source='${statements_dir}/foreach.cc' object='foreach.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o foreach.obj `if test -f '${statements_dir}/foreach.cc'; then $(CYGPATH_W) '${statements_dir}/foreach.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/foreach.cc'; fi`

id_query.o: ${statements_dir}/id_query.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT id_query.o -MD -MP -MF $(DEPDIR)/id_query.Tpo -c -o id_query.o `test -f '${statements_dir}/id_query.cc' || echo '$(srcdir)/'`${statements_dir}/id_query.cc
	$(am__mv) $(DEPDIR)/id_query.Tpo $(DEPDIR)/id_query.Po
#	source='${statements_dir}/id_query.cc' object='id_query.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o id_query.o `test -f '${statements_dir}/id_query.cc' || echo '$(srcdir)/'`${statements_dir}/id_query.cc

id_query.obj: ${statements_dir}/id_query.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT id_query.obj -MD -MP -MF $(DEPDIR)/id_query.Tpo -c -o id_query.obj `if test -f '${statements_dir}/id_query.cc'; then $(CYGPATH_W) '${statements_dir}/id_query.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/id_query.cc'; fi`
	$(am__mv) $(DEPDIR)/id_query.Tpo $(DEPDIR)/id_query.Po
#	source='${statements_dir}/id_query.cc' object='id_query.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o id_query.obj `if test -f '${statements_dir}/id_query.cc'; then $(CYGPATH_W) '${statements_dir}/id_query.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/id_query.cc'; fi`

item.o: ${statements_dir}/item.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT item.o -MD -MP -MF $(DEPDIR)/item.Tpo -c -o item.o `test -f '${statements_dir}/item.cc' || echo '$(srcdir)/'`${statements_dir}/item.cc
	$(am__mv) $(DEPDIR)/item.Tpo $(DEPDIR)/item.Po
#	source='${statements_dir}/item.cc' object='item.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o item.o `test -f '${statements_dir}/item.cc' || echo '$(srcdir)/'`${statements_dir}/item.cc

item.obj: ${statements_dir}/item.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT item.obj -MD -MP -MF $(DEPDIR)/item.Tpo -c -o item.obj `if test -f '${statements_dir}/item.cc'; then $(CYGPATH_W) '${statements_dir}/item.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/item.cc'; fi`
	$(am__mv) $(DEPDIR)/item.Tpo $(DEPDIR)/item.Po
#	source='${statements_dir}/item.cc' object='item.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o item.obj `if test -f '${statements_dir}/item.cc'; then $(CYGPATH_W) '${statements_dir}/item.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/item.cc'; fi`

make_area.o: ${statements_dir}/make_area.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT make_area.o -MD -MP -MF $(DEPDIR)/make_area.Tpo -c -o make_area.o `test -f '${statements_dir}/make_area.cc' || echo '$(srcdir)/'`${statements_dir}/make_area.cc
	$(am__mv) $(DEPDIR)/make_area.Tpo $(DEPDIR)/make_area.Po
#	source='${statements_dir}/make_area.cc' object='make_area.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o make_area.o `test -f '${statements_dir}/make_area.cc' || echo '$(srcdir)/'`${statements_dir}/make_area.cc

make_area.obj: ${statements_dir}/make_area.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT make_area.obj -MD -MP -MF $(DEPDIR)/make_area.Tpo -c -o make_area.obj `if test -f '${statements_dir}/make_area.cc'; then $(CYGPATH_W) '${statements_dir}/make_area.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/make_area.cc'; fi`
	$(am__mv) $(DEPDIR)/make_area.Tpo $(DEPDIR)/make_area.Po
#	source='${statements_dir}/make_area.cc' object='make_area.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o make_area.obj `if test -f '${statements_dir}/make_area.cc'; then $(CYGPATH_W) '${statements_dir}/make_area.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/make_area.cc'; fi`

map_to_area.o: ${statements_dir}/map_to_area.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT map_to_area.o -MD -MP -MF $(DEPDIR)/map_to_area.Tpo -c -o map_to_area.o `test -f '${statements_dir}/map_to_area.cc' || echo '$(srcdir)/'`${statements_dir}/map_to_area.cc
	$(am__mv) $(DEPDIR)/map_to_area.Tpo $(DEPDIR)/map_to_area.Po
#	source='${statements_dir}/map_to_area.cc' object='map_to_area.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o map_to_area.o `test -f '${statements_dir}/map_to_area.cc' || echo '$(srcdir)/'`${statements_dir}/map_to_area.cc

map_to_area.obj: ${statements_dir}/map_to_area.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT map_to_area.obj -MD -MP -MF $(DEPDIR)/map_to_area.Tpo -c -o map_to_area.obj `if test -f '${statements_dir}/map_to_area.cc'; then $(CYGPATH_W) '${statements_dir}/map_to_area.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/map_to_area.cc'; fi`
	$(am__mv) $(DEPDIR)/map_to_area.Tpo $(DEPDIR)/map_to_area.Po
#	source='${statements_dir}/map_to_area.cc' object='map_to_area.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o map_to_area.obj `if test -f '${statements_dir}/map_to_area.cc'; then $(CYGPATH_W) '${statements_dir}/map_to_area.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/map_to_area.cc'; fi`

newer.o: ${statements_dir}/newer.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT newer.o -MD -MP -MF $(DEPDIR)/newer.Tpo -c -o newer.o `test -f '${statements_dir}/newer.cc' || echo '$(srcdir)/'`${statements_dir}/newer.cc
	$(am__mv) $(DEPDIR)/newer.Tpo $(DEPDIR)/newer.Po
#	source='${statements_dir}/newer.cc' object='newer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o newer.o `test -f '${statements_dir}/newer.cc' || echo '$(srcdir)/'`${statements_dir}/newer.cc

newer.obj: ${statements_dir}/newer.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT newer.obj -MD -MP -MF $(DEPDIR)/newer.Tpo -c -o newer.obj `if test -f '${statements_dir}/newer.cc'; then $(CYGPATH_W) '${statements_dir}/newer.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/newer.cc'; fi`
	$(am__mv) $(DEPDIR)/newer.Tpo $(DEPDIR)/newer.Po
#	source='${statements_dir}/newer.cc' object='newer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o newer.obj `if test -f '${statements_dir}/newer.cc'; then $(CYGPATH_W) '${statements_dir}/newer.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/newer.cc'; fi`

osm_script.o: ${statements_dir}/osm_script.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT osm_script.o -MD -MP -MF $(DEPDIR)/osm_script.Tpo -c -o osm_script.o `test -f '${statements_dir}/osm_script.cc' || echo '$(srcdir)/'`${statements_dir}/osm_script.cc
	$(am__mv) $(DEPDIR)/osm_script.Tpo $(DEPDIR)/osm_script.Po
#	source='${statements_dir}/osm_script.cc' object='osm_script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o osm_script.o `test -f '${statements_dir}/osm_script.cc' || echo '$(srcdir)/'`${statements_dir}/osm_script.cc

osm_script.obj: ${statements_dir}/osm_script.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT osm_script.obj -MD -MP -MF $(DEPDIR)/osm_script.Tpo -c -o osm_script.obj `if test -f '${statements_dir}/osm_script.cc'; then $(CYGPATH_W) '${statements_dir}/osm_script.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/osm_script.cc'; fi`
	$(am__mv) $(DEPDIR)/osm_script.Tpo $(DEPDIR)/osm_script.Po
#	source='${statements_dir}/osm_script.cc' object='osm_script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o osm_script.obj `if test -f '${statements_dir}/osm_script.cc'; then $(CYGPATH_W) '${statements_dir}/osm_script.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/osm_script.cc'; fi`

pivot.o: ${statements_dir}/pivot.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pivot.o -MD -MP -MF $(DEPDIR)/pivot.Tpo -c -o pivot.o `test -f '${statements_dir}/pivot.cc' || echo '$(srcdir)/'`${statements_dir}/pivot.cc
	$(am__mv) $(DEPDIR)/pivot.Tpo $(DEPDIR)/pivot.Po
#	source='${statements_dir}/pivot.cc' object='pivot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pivot.o `test -f '${statements_dir}/pivot.cc' || echo '$(srcdir)/'`${statements_dir}/pivot.cc

pivot.obj: ${statements_dir}/pivot.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pivot.obj -MD -MP -MF $(DEPDIR)/pivot.Tpo -c -o pivot.obj `if test -f '${statements_dir}/pivot.cc'; then $(CYGPATH_W) '${statements_dir}/pivot.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/pivot.cc'; fi`
	$(am__mv) $(DEPDIR)/pivot.Tpo $(DEPDIR)/pivot.Po
#	source='${statements_dir}/pivot.cc' object='pivot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pivot.obj `if test -f '${statements_dir}/pivot.cc'; then $(CYGPATH_W) '${statements_dir}/pivot.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/pivot.cc'; fi`

polygon_query.o: ${statements_dir}/polygon_query.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT polygon_query.o -MD -MP -MF $(DEPDIR)/polygon_query.Tpo -c -o polygon_query.o `test -f '${statements_dir}/polygon_query.cc' || echo '$(srcdir)/'`${statements_dir}/polygon_query.cc
	$(am__mv) $(DEPDIR)/polygon_query.Tpo $(DEPDIR)/polygon_query.Po
#	source='${statements_dir}/polygon_query.cc' object='polygon_query.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o polygon_query.o `test -f '${statements_dir}/polygon_query.cc' || echo '$(srcdir)/'`${statements_dir}/polygon_query.cc

polygon_query.obj: ${statements_dir}/polygon_query.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT polygon_query.obj -MD -MP -MF $(DEPDIR)/polygon_query.Tpo -c -o polygon_query.obj `if test -f '${statements_dir}/polygon_query.cc'; then $(CYGPATH_W) '${statements_dir}/polygon_query.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/polygon_query.cc'; fi`
	$(am__mv) $(DEPDIR)/polygon_query.Tpo $(DEPDIR)/polygon_query.Po
#	source='${statements_dir}/polygon_query.cc' object='polygon_query.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o polygon_query.obj `if test -f '${statements_dir}/polygon_query.cc'; then $(CYGPATH_W) '${statements_dir}/polygon_query.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/polygon_query.cc'; fi`

print.o: ${statements_dir}/print.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT print.o -MD -MP -MF $(DEPDIR)/print.Tpo -c -o print.o `test -f '${statements_dir}/print.cc' || echo '$(srcdir)/'`${statements_dir}/print.cc
	$(am__mv) $(DEPDIR)/print.Tpo $(DEPDIR)/print.Po
#	source='${statements_dir}/print.cc' object='print.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o print.o `test -f '${statements_dir}/print.cc' || echo '$(srcdir)/'`${statements_dir}/print.cc

print.obj: ${statements_dir}/print.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT print.obj -MD -MP -MF $(DEPDIR)/print.Tpo -c -o print.obj `if test -f '${statements_dir}/print.cc'; then $(CYGPATH_W) '${statements_dir}/print.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/print.cc'; fi`
	$(am__mv) $(DEPDIR)/print.Tpo $(DEPDIR)/print.Po
#	source='${statements_dir}/print.cc' object='print.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o print.obj `if test -f '${statements_dir}/print.cc'; then $(CYGPATH_W) '${statements_dir}/print.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/print.cc'; fi`

query.o: ${statements_dir}/query.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT query.o -MD -MP -MF $(DEPDIR)/query.Tpo -c -o query.o `test -f '${statements_dir}/query.cc' || echo '$(srcdir)/'`${statements_dir}/query.cc
	$(am__mv) $(DEPDIR)/query.Tpo $(DEPDIR)/query.Po
#	source='${statements_dir}/query.cc' object='query.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o query.o `test -f '${statements_dir}/query.cc' || echo '$(srcdir)/'`${statements_dir}/query.cc

query.obj: ${statements_dir}/query.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT query.obj -MD -MP -MF $(DEPDIR)/query.Tpo -c -o query.obj `if test -f '${statements_dir}/query.cc'; then $(CYGPATH_W) '${statements_dir}/query.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/query.cc'; fi`
	$(am__mv) $(DEPDIR)/query.Tpo $(DEPDIR)/query.Po
#	source='${statements_dir}/query.cc' object='query.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o query.obj `if test -f '${statements_dir}/query.cc'; then $(CYGPATH_W) '${statements_dir}/query.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/query.cc'; fi`

recurse.o: ${statements_dir}/recurse.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT recurse.o -MD -MP -MF $(DEPDIR)/recurse.Tpo -c -o recurse.o `test -f '${statements_dir}/recurse.cc' || echo '$(srcdir)/'`${statements_dir}/recurse.cc
	$(am__mv) $(DEPDIR)/recurse.Tpo $(DEPDIR)/recurse.Po
#	source='${statements_dir}/recurse.cc' object='recurse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o recurse.o `test -f '${statements_dir}/recurse.cc' || echo '$(srcdir)/'`${statements_dir}/recurse.cc

recurse.obj: ${statements_dir}/recurse.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT recurse.obj -MD -MP -MF $(DEPDIR)/recurse.Tpo -c -o recurse.obj `if test -f '${statements_dir}/recurse.cc'; then $(CYGPATH_W) '${statements_dir}/recurse.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/recurse.cc'; fi`
	$(am__mv) $(DEPDIR)/recurse.Tpo $(DEPDIR)/recurse.Po
#	source='${statements_dir}/recurse.cc' object='recurse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o recurse.obj `if test -f '${statements_dir}/recurse.cc'; then $(CYGPATH_W) '${statements_dir}/recurse.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/recurse.cc'; fi`

union.o: ${statements_dir}/union.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT union.o -MD -MP -MF $(DEPDIR)/union.Tpo -c -o union.o `test -f '${statements_dir}/union.cc' || echo '$(srcdir)/'`${statements_dir}/union.cc
	$(am__mv) $(DEPDIR)/union.Tpo $(DEPDIR)/union.Po
#	source='${statements_dir}/union.cc' object='union.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o union.o `test -f '${statements_dir}/union.cc' || echo '$(srcdir)/'`${statements_dir}/union.cc

union.obj: ${statements_dir}/union.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT union.obj -MD -MP -MF $(DEPDIR)/union.Tpo -c -o union.obj `if test -f '${statements_dir}/union.cc'; then $(CYGPATH_W) '${statements_dir}/union.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/union.cc'; fi`
	$(am__mv) $(DEPDIR)/union.Tpo $(DEPDIR)/union.Po
#	source='${statements_dir}/union.cc' object='union.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o union.obj `if test -f '${statements_dir}/union.cc'; then $(CYGPATH_W) '${statements_dir}/union.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/union.cc'; fi`

user.o: ${statements_dir}/user.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT user.o -MD -MP -MF $(DEPDIR)/user.Tpo -c -o user.o `test -f '${statements_dir}/user.cc' || echo '$(srcdir)/'`${statements_dir}/user.cc
	$(am__mv) $(DEPDIR)/user.Tpo $(DEPDIR)/user.Po
#	source='${statements_dir}/user.cc' object='user.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o user.o `test -f '${statements_dir}/user.cc' || echo '$(srcdir)/'`${statements_dir}/user.cc

user.obj: ${statements_dir}/user.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT user.obj -MD -MP -MF $(DEPDIR)/user.Tpo -c -o user.obj `if test -f '${statements_dir}/user.cc'; then $(CYGPATH_W) '${statements_dir}/user.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/user.cc'; fi`
	$(am__mv) $(DEPDIR)/user.Tpo $(DEPDIR)/user.Po
#	source='${statements_dir}/user.cc' object='user.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o user.obj `if test -f '${statements_dir}/user.cc'; then $(CYGPATH_W) '${statements_dir}/user.cc'; else $(CYGPATH_W) '$(srcdir)/${statements_dir}/user.cc'; fi`

print_target.o: overpass_api/frontend/print_target.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT print_target.o -MD -MP -MF $(DEPDIR)/print_target.Tpo -c -o print_target.o `test -f 'overpass_api/frontend/print_target.cc' || echo '$(srcdir)/'`overpass_api/frontend/print_target.cc
	$(am__mv) $(DEPDIR)/print_target.Tpo $(DEPDIR)/print_target.Po
#	source='overpass_api/frontend/print_target.cc' object='print_target.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o print_target.o `test -f 'overpass_api/frontend/print_target.cc' || echo '$(srcdir)/'`overpass_api/frontend/print_target.cc

print_target.obj: overpass_api/frontend/print_target.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT print_target.obj -MD -MP -MF $(DEPDIR)/print_target.Tpo -c -o print_target.obj `if test -f 'overpass_api/frontend/print_target.cc'; then $(CYGPATH_W) 'overpass_api/frontend/print_target.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/frontend/print_target.cc'; fi`
	$(am__mv) $(DEPDIR)/print_target.Tpo $(DEPDIR)/print_target.Po
#	source='overpass_api/frontend/print_target.cc' object='print_target.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o print_target.obj `if test -f 'overpass_api/frontend/print_target.cc'; then $(CYGPATH_W) 'overpass_api/frontend/print_target.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/frontend/print_target.cc'; fi`

console_output.o: overpass_api/frontend/console_output.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT console_output.o -MD -MP -MF $(DEPDIR)/console_output.Tpo -c -o console_output.o `test -f 'overpass_api/frontend/console_output.cc' || echo '$(srcdir)/'`overpass_api/frontend/console_output.cc
	$(am__mv) $(DEPDIR)/console_output.Tpo $(DEPDIR)/console_output.Po
#	source='overpass_api/frontend/console_output.cc' object='console_output.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o console_output.o `test -f 'overpass_api/frontend/console_output.cc' || echo '$(srcdir)/'`overpass_api/frontend/console_output.cc

console_output.obj: overpass_api/frontend/console_output.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT console_output.obj -MD -MP -MF $(DEPDIR)/console_output.Tpo -c -o console_output.obj `if test -f 'overpass_api/frontend/console_output.cc'; then $(CYGPATH_W) 'overpass_api/frontend/console_output.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/frontend/console_output.cc'; fi`
	$(am__mv) $(DEPDIR)/console_output.Tpo $(DEPDIR)/console_output.Po
#	source='overpass_api/frontend/console_output.cc' object='console_output.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o console_output.obj `if test -f 'overpass_api/frontend/console_output.cc'; then $(CYGPATH_W) 'overpass_api/frontend/console_output.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/frontend/console_output.cc'; fi`

osm3s_query.o: overpass_api/dispatch/osm3s_query.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT osm3s_query.o -MD -MP -MF $(DEPDIR)/osm3s_query.Tpo -c -o osm3s_query.o `test -f 'overpass_api/dispatch/osm3s_query.cc' || echo '$(srcdir)/'`overpass_api/dispatch/osm3s_query.cc
	$(am__mv) $(DEPDIR)/osm3s_query.Tpo $(DEPDIR)/osm3s_query.Po
#	source='overpass_api/dispatch/osm3s_query.cc' object='osm3s_query.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o osm3s_query.o `test -f 'overpass_api/dispatch/osm3s_query.cc' || echo '$(srcdir)/'`overpass_api/dispatch/osm3s_query.cc

osm3s_query.obj: overpass_api/dispatch/osm3s_query.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT osm3s_query.obj -MD -MP -MF $(DEPDIR)/osm3s_query.Tpo -c -o osm3s_query.obj `if test -f 'overpass_api/dispatch/osm3s_query.cc'; then $(CYGPATH_W) 'overpass_api/dispatch/osm3s_query.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/dispatch/osm3s_query.cc'; fi`
	$(am__mv) $(DEPDIR)/osm3s_query.Tpo $(DEPDIR)/osm3s_query.Po
#	source='overpass_api/dispatch/osm3s_query.cc' object='osm3s_query.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o osm3s_query.obj `if test -f 'overpass_api/dispatch/osm3s_query.cc'; then $(CYGPATH_W) 'overpass_api/dispatch/osm3s_query.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/dispatch/osm3s_query.cc'; fi`

clone_database.o: overpass_api/osm-backend/clone_database.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT clone_database.o -MD -MP -MF $(DEPDIR)/clone_database.Tpo -c -o clone_database.o `test -f 'overpass_api/osm-backend/clone_database.cc' || echo '$(srcdir)/'`overpass_api/osm-backend/clone_database.cc
	$(am__mv) $(DEPDIR)/clone_database.Tpo $(DEPDIR)/clone_database.Po
#	source='overpass_api/osm-backend/clone_database.cc' object='clone_database.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o clone_database.o `test -f 'overpass_api/osm-backend/clone_database.cc' || echo '$(srcdir)/'`overpass_api/osm-backend/clone_database.cc

clone_database.obj: overpass_api/osm-backend/clone_database.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT clone_database.obj -MD -MP -MF $(DEPDIR)/clone_database.Tpo -c -o clone_database.obj `if test -f 'overpass_api/osm-backend/clone_database.cc'; then $(CYGPATH_W) 'overpass_api/osm-backend/clone_database.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/osm-backend/clone_database.cc'; fi`
	$(am__mv) $(DEPDIR)/clone_database.Tpo $(DEPDIR)/clone_database.Po
#	source='overpass_api/osm-backend/clone_database.cc' object='clone_database.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o clone_database.obj `if test -f 'overpass_api/osm-backend/clone_database.cc'; then $(CYGPATH_W) 'overpass_api/osm-backend/clone_database.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/osm-backend/clone_database.cc'; fi`

scripting_core.o: overpass_api/dispatch/scripting_core.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scripting_core.o -MD -MP -MF $(DEPDIR)/scripting_core.Tpo -c -o scripting_core.o `test -f 'overpass_api/dispatch/scripting_core.cc' || echo '$(srcdir)/'`overpass_api/dispatch/scripting_core.cc
	$(am__mv) $(DEPDIR)/scripting_core.Tpo $(DEPDIR)/scripting_core.Po
#	source='overpass_api/dispatch/scripting_core.cc' object='scripting_core.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scripting_core.o `test -f 'overpass_api/dispatch/scripting_core.cc' || echo '$(srcdir)/'`overpass_api/dispatch/scripting_core.cc

scripting_core.obj: overpass_api/dispatch/scripting_core.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT scripting_core.obj -MD -MP -MF $(DEPDIR)/scripting_core.Tpo -c -o scripting_core.obj `if test -f 'overpass_api/dispatch/scripting_core.cc'; then $(CYGPATH_W) 'overpass_api/dispatch/scripting_core.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/dispatch/scripting_core.cc'; fi`
	$(am__mv) $(DEPDIR)/scripting_core.Tpo $(DEPDIR)/scripting_core.Po
#	source='overpass_api/dispatch/scripting_core.cc' object='scripting_core.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o scripting_core.obj `if test -f 'overpass_api/dispatch/scripting_core.cc'; then $(CYGPATH_W) 'overpass_api/dispatch/scripting_core.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/dispatch/scripting_core.cc'; fi`

dispatcher_stub.o: overpass_api/dispatch/dispatcher_stub.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dispatcher_stub.o -MD -MP -MF $(DEPDIR)/dispatcher_stub.Tpo -c -o dispatcher_stub.o `test -f 'overpass_api/dispatch/dispatcher_stub.cc' || echo '$(srcdir)/'`overpass_api/dispatch/dispatcher_stub.cc
	$(am__mv) $(DEPDIR)/dispatcher_stub.Tpo $(DEPDIR)/dispatcher_stub.Po
#	source='overpass_api/dispatch/dispatcher_stub.cc' object='dispatcher_stub.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dispatcher_stub.o `test -f 'overpass_api/dispatch/dispatcher_stub.cc' || echo '$(srcdir)/'`overpass_api/dispatch/dispatcher_stub.cc

dispatcher_stub.obj: overpass_api/dispatch/dispatcher_stub.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dispatcher_stub.obj -MD -MP -MF $(DEPDIR)/dispatcher_stub.Tpo -c -o dispatcher_stub.obj `if test -f 'overpass_api/dispatch/dispatcher_stub.cc'; then $(CYGPATH_W) 'overpass_api/dispatch/dispatcher_stub.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/dispatch/dispatcher_stub.cc'; fi`
	$(am__mv) $(DEPDIR)/dispatcher_stub.Tpo $(DEPDIR)/dispatcher_stub.Po
#	source='overpass_api/dispatch/dispatcher_stub.cc' object='dispatcher_stub.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dispatcher_stub.obj `if test -f 'overpass_api/dispatch/dispatcher_stub.cc'; then $(CYGPATH_W) 'overpass_api/dispatch/dispatcher_stub.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/dispatch/dispatcher_stub.cc'; fi`

types.o: template_db/types.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT types.o -MD -MP -MF $(DEPDIR)/types.Tpo -c -o types.o `test -f 'template_db/types.cc' || echo '$(srcdir)/'`template_db/types.cc
	$(am__mv) $(DEPDIR)/types.Tpo $(DEPDIR)/types.Po
#	source='template_db/types.cc' object='types.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o types.o `test -f 'template_db/types.cc' || echo '$(srcdir)/'`template_db/types.cc

types.obj: template_db/types.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT types.obj -MD -MP -MF $(DEPDIR)/types.Tpo -c -o types.obj `if test -f 'template_db/types.cc'; then $(CYGPATH_W) 'template_db/types.cc'; else $(CYGPATH_W) '$(srcdir)/template_db/types.cc'; fi`
	$(am__mv) $(DEPDIR)/types.Tpo $(DEPDIR)/types.Po
#	source='template_db/types.cc' object='types.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o types.obj `if test -f 'template_db/types.cc'; then $(CYGPATH_W) 'template_db/types.cc'; else $(CYGPATH_W) '$(srcdir)/template_db/types.cc'; fi`

process_augmented_diffs.o: expat/process_augmented_diffs.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT process_augmented_diffs.o -MD -MP -MF $(DEPDIR)/process_augmented_diffs.Tpo -c -o process_augmented_diffs.o `test -f 'expat/process_augmented_diffs.cc' || echo '$(srcdir)/'`expat/process_augmented_diffs.cc
	$(am__mv) $(DEPDIR)/process_augmented_diffs.Tpo $(DEPDIR)/process_augmented_diffs.Po
#	source='expat/process_augmented_diffs.cc' object='process_augmented_diffs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o process_augmented_diffs.o `test -f 'expat/process_augmented_diffs.cc' || echo '$(srcdir)/'`expat/process_augmented_diffs.cc

process_augmented_diffs.obj: expat/process_augmented_diffs.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT process_augmented_diffs.obj -MD -MP -MF $(DEPDIR)/process_augmented_diffs.Tpo -c -o process_augmented_diffs.obj `if test -f 'expat/process_augmented_diffs.cc'; then $(CYGPATH_W) 'expat/process_augmented_diffs.cc'; else $(CYGPATH_W) '$(srcdir)/expat/process_augmented_diffs.cc'; fi`
	$(am__mv) $(DEPDIR)/process_augmented_diffs.Tpo $(DEPDIR)/process_augmented_diffs.Po
#	source='expat/process_augmented_diffs.cc' object='process_augmented_diffs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o process_augmented_diffs.obj `if test -f 'expat/process_augmented_diffs.cc'; then $(CYGPATH_W) 'expat/process_augmented_diffs.cc'; else $(CYGPATH_W) '$(srcdir)/expat/process_augmented_diffs.cc'; fi`

sketch-route-svg.o: pt_diagrams/sketch-route-svg.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sketch-route-svg.o -MD -MP -MF $(DEPDIR)/sketch-route-svg.Tpo -c -o sketch-route-svg.o `test -f 'pt_diagrams/sketch-route-svg.cc' || echo '$(srcdir)/'`pt_diagrams/sketch-route-svg.cc
	$(am__mv) $(DEPDIR)/sketch-route-svg.Tpo $(DEPDIR)/sketch-route-svg.Po
#	source='pt_diagrams/sketch-route-svg.cc' object='sketch-route-svg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sketch-route-svg.o `test -f 'pt_diagrams/sketch-route-svg.cc' || echo '$(srcdir)/'`pt_diagrams/sketch-route-svg.cc

sketch-route-svg.obj: pt_diagrams/sketch-route-svg.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sketch-route-svg.obj -MD -MP -MF $(DEPDIR)/sketch-route-svg.Tpo -c -o sketch-route-svg.obj `if test -f 'pt_diagrams/sketch-route-svg.cc'; then $(CYGPATH_W) 'pt_diagrams/sketch-route-svg.cc'; else $(CYGPATH_W) '$(srcdir)/pt_diagrams/sketch-route-svg.cc'; fi`
	$(am__mv) $(DEPDIR)/sketch-route-svg.Tpo $(DEPDIR)/sketch-route-svg.Po
#	source='pt_diagrams/sketch-route-svg.cc' object='sketch-route-svg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sketch-route-svg.obj `if test -f 'pt_diagrams/sketch-route-svg.cc'; then $(CYGPATH_W) 'pt_diagrams/sketch-route-svg.cc'; else $(CYGPATH_W) '$(srcdir)/pt_diagrams/sketch-route-svg.cc'; fi`

processed_input.o: pt_diagrams/processed_input.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT processed_input.o -MD -MP -MF $(DEPDIR)/processed_input.Tpo -c -o processed_input.o `test -f 'pt_diagrams/processed_input.cc' || echo '$(srcdir)/'`pt_diagrams/processed_input.cc
	$(am__mv) $(DEPDIR)/processed_input.Tpo $(DEPDIR)/processed_input.Po
#	source='pt_diagrams/processed_input.cc' object='processed_input.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o processed_input.o `test -f 'pt_diagrams/processed_input.cc' || echo '$(srcdir)/'`pt_diagrams/processed_input.cc

processed_input.obj: pt_diagrams/processed_input.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT processed_input.obj -MD -MP -MF $(DEPDIR)/processed_input.Tpo -c -o processed_input.obj `if test -f 'pt_diagrams/processed_input.cc'; then $(CYGPATH_W) 'pt_diagrams/processed_input.cc'; else $(CYGPATH_W) '$(srcdir)/pt_diagrams/processed_input.cc'; fi`
	$(am__mv) $(DEPDIR)/processed_input.Tpo $(DEPDIR)/processed_input.Po
#	source='pt_diagrams/processed_input.cc' object='processed_input.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o processed_input.obj `if test -f 'pt_diagrams/processed_input.cc'; then $(CYGPATH_W) 'pt_diagrams/processed_input.cc'; else $(CYGPATH_W) '$(srcdir)/pt_diagrams/processed_input.cc'; fi`

tocgi.o: pt_diagrams/tocgi.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tocgi.o -MD -MP -MF $(DEPDIR)/tocgi.Tpo -c -o tocgi.o `test -f 'pt_diagrams/tocgi.cc' || echo '$(srcdir)/'`pt_diagrams/tocgi.cc
	$(am__mv) $(DEPDIR)/tocgi.Tpo $(DEPDIR)/tocgi.Po
#	source='pt_diagrams/tocgi.cc' object='tocgi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tocgi.o `test -f 'pt_diagrams/tocgi.cc' || echo '$(srcdir)/'`pt_diagrams/tocgi.cc

tocgi.obj: pt_diagrams/tocgi.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tocgi.obj -MD -MP -MF $(DEPDIR)/tocgi.Tpo -c -o tocgi.obj `if test -f 'pt_diagrams/tocgi.cc'; then $(CYGPATH_W) 'pt_diagrams/tocgi.cc'; else $(CYGPATH_W) '$(srcdir)/pt_diagrams/tocgi.cc'; fi`
	$(am__mv) $(DEPDIR)/tocgi.Tpo $(DEPDIR)/tocgi.Po
#	source='pt_diagrams/tocgi.cc' object='tocgi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tocgi.obj `if test -f 'pt_diagrams/tocgi.cc'; then $(CYGPATH_W) 'pt_diagrams/tocgi.cc'; else $(CYGPATH_W) '$(srcdir)/pt_diagrams/tocgi.cc'; fi`

translate_xapi.o: expat/translate_xapi.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT translate_xapi.o -MD -MP -MF $(DEPDIR)/translate_xapi.Tpo -c -o translate_xapi.o `test -f 'expat/translate_xapi.cc' || echo '$(srcdir)/'`expat/translate_xapi.cc
	$(am__mv) $(DEPDIR)/translate_xapi.Tpo $(DEPDIR)/translate_xapi.Po
#	source='expat/translate_xapi.cc' object='translate_xapi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o translate_xapi.o `test -f 'expat/translate_xapi.cc' || echo '$(srcdir)/'`expat/translate_xapi.cc

translate_xapi.obj: expat/translate_xapi.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT translate_xapi.obj -MD -MP -MF $(DEPDIR)/translate_xapi.Tpo -c -o translate_xapi.obj `if test -f 'expat/translate_xapi.cc'; then $(CYGPATH_W) 'expat/translate_xapi.cc'; else $(CYGPATH_W) '$(srcdir)/expat/translate_xapi.cc'; fi`
	$(am__mv) $(DEPDIR)/translate_xapi.Tpo $(DEPDIR)/translate_xapi.Po
#	source='expat/translate_xapi.cc' object='translate_xapi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o translate_xapi.obj `if test -f 'expat/translate_xapi.cc'; then $(CYGPATH_W) 'expat/translate_xapi.cc'; else $(CYGPATH_W) '$(srcdir)/expat/translate_xapi.cc'; fi`

uncgi.o: pt_diagrams/uncgi.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT uncgi.o -MD -MP -MF $(DEPDIR)/uncgi.Tpo -c -o uncgi.o `test -f 'pt_diagrams/uncgi.cc' || echo '$(srcdir)/'`pt_diagrams/uncgi.cc
	$(am__mv) $(DEPDIR)/uncgi.Tpo $(DEPDIR)/uncgi.Po
#	source='pt_diagrams/uncgi.cc' object='uncgi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o uncgi.o `test -f 'pt_diagrams/uncgi.cc' || echo '$(srcdir)/'`pt_diagrams/uncgi.cc

uncgi.obj: pt_diagrams/uncgi.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT uncgi.obj -MD -MP -MF $(DEPDIR)/uncgi.Tpo -c -o uncgi.obj `if test -f 'pt_diagrams/uncgi.cc'; then $(CYGPATH_W) 'pt_diagrams/uncgi.cc'; else $(CYGPATH_W) '$(srcdir)/pt_diagrams/uncgi.cc'; fi`
	$(am__mv) $(DEPDIR)/uncgi.Tpo $(DEPDIR)/uncgi.Po
#	source='pt_diagrams/uncgi.cc' object='uncgi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o uncgi.obj `if test -f 'pt_diagrams/uncgi.cc'; then $(CYGPATH_W) 'pt_diagrams/uncgi.cc'; else $(CYGPATH_W) '$(srcdir)/pt_diagrams/uncgi.cc'; fi`

meta_updater.o: overpass_api/osm-backend/meta_updater.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT meta_updater.o -MD -MP -MF $(DEPDIR)/meta_updater.Tpo -c -o meta_updater.o `test -f 'overpass_api/osm-backend/meta_updater.cc' || echo '$(srcdir)/'`overpass_api/osm-backend/meta_updater.cc
	$(am__mv) $(DEPDIR)/meta_updater.Tpo $(DEPDIR)/meta_updater.Po
#	source='overpass_api/osm-backend/meta_updater.cc' object='meta_updater.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o meta_updater.o `test -f 'overpass_api/osm-backend/meta_updater.cc' || echo '$(srcdir)/'`overpass_api/osm-backend/meta_updater.cc

meta_updater.obj: overpass_api/osm-backend/meta_updater.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT meta_updater.obj -MD -MP -MF $(DEPDIR)/meta_updater.Tpo -c -o meta_updater.obj `if test -f 'overpass_api/osm-backend/meta_updater.cc'; then $(CYGPATH_W) 'overpass_api/osm-backend/meta_updater.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/osm-backend/meta_updater.cc'; fi`
	$(am__mv) $(DEPDIR)/meta_updater.Tpo $(DEPDIR)/meta_updater.Po
#	source='overpass_api/osm-backend/meta_updater.cc' object='meta_updater.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o meta_updater.obj `if test -f 'overpass_api/osm-backend/meta_updater.cc'; then $(CYGPATH_W) 'overpass_api/osm-backend/meta_updater.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/osm-backend/meta_updater.cc'; fi`

basic_updater.o: overpass_api/osm-backend/basic_updater.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT basic_updater.o -MD -MP -MF $(DEPDIR)/basic_updater.Tpo -c -o basic_updater.o `test -f 'overpass_api/osm-backend/basic_updater.cc' || echo '$(srcdir)/'`overpass_api/osm-backend/basic_updater.cc
	$(am__mv) $(DEPDIR)/basic_updater.Tpo $(DEPDIR)/basic_updater.Po
#	source='overpass_api/osm-backend/basic_updater.cc' object='basic_updater.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o basic_updater.o `test -f 'overpass_api/osm-backend/basic_updater.cc' || echo '$(srcdir)/'`overpass_api/osm-backend/basic_updater.cc

basic_updater.obj: overpass_api/osm-backend/basic_updater.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT basic_updater.obj -MD -MP -MF $(DEPDIR)/basic_updater.Tpo -c -o basic_updater.obj `if test -f 'overpass_api/osm-backend/basic_updater.cc'; then $(CYGPATH_W) 'overpass_api/osm-backend/basic_updater.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/osm-backend/basic_updater.cc'; fi`
	$(am__mv) $(DEPDIR)/basic_updater.Tpo $(DEPDIR)/basic_updater.Po
#	source='overpass_api/osm-backend/basic_updater.cc' object='basic_updater.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o basic_updater.obj `if test -f 'overpass_api/osm-backend/basic_updater.cc'; then $(CYGPATH_W) 'overpass_api/osm-backend/basic_updater.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/osm-backend/basic_updater.cc'; fi`

node_updater.o: overpass_api/osm-backend/node_updater.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT node_updater.o -MD -MP -MF $(DEPDIR)/node_updater.Tpo -c -o node_updater.o `test -f 'overpass_api/osm-backend/node_updater.cc' || echo '$(srcdir)/'`overpass_api/osm-backend/node_updater.cc
	$(am__mv) $(DEPDIR)/node_updater.Tpo $(DEPDIR)/node_updater.Po
#	source='overpass_api/osm-backend/node_updater.cc' object='node_updater.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o node_updater.o `test -f 'overpass_api/osm-backend/node_updater.cc' || echo '$(srcdir)/'`overpass_api/osm-backend/node_updater.cc

node_updater.obj: overpass_api/osm-backend/node_updater.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT node_updater.obj -MD -MP -MF $(DEPDIR)/node_updater.Tpo -c -o node_updater.obj `if test -f 'overpass_api/osm-backend/node_updater.cc'; then $(CYGPATH_W) 'overpass_api/osm-backend/node_updater.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/osm-backend/node_updater.cc'; fi`
	$(am__mv) $(DEPDIR)/node_updater.Tpo $(DEPDIR)/node_updater.Po
#	source='overpass_api/osm-backend/node_updater.cc' object='node_updater.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o node_updater.obj `if test -f 'overpass_api/osm-backend/node_updater.cc'; then $(CYGPATH_W) 'overpass_api/osm-backend/node_updater.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/osm-backend/node_updater.cc'; fi`

way_updater.o: overpass_api/osm-backend/way_updater.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT way_updater.o -MD -MP -MF $(DEPDIR)/way_updater.Tpo -c -o way_updater.o `test -f 'overpass_api/osm-backend/way_updater.cc' || echo '$(srcdir)/'`overpass_api/osm-backend/way_updater.cc
	$(am__mv) $(DEPDIR)/way_updater.Tpo $(DEPDIR)/way_updater.Po
#	source='overpass_api/osm-backend/way_updater.cc' object='way_updater.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o way_updater.o `test -f 'overpass_api/osm-backend/way_updater.cc' || echo '$(srcdir)/'`overpass_api/osm-backend/way_updater.cc

way_updater.obj: overpass_api/osm-backend/way_updater.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT way_updater.obj -MD -MP -MF $(DEPDIR)/way_updater.Tpo -c -o way_updater.obj `if test -f 'overpass_api/osm-backend/way_updater.cc'; then $(CYGPATH_W) 'overpass_api/osm-backend/way_updater.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/osm-backend/way_updater.cc'; fi`
	$(am__mv) $(DEPDIR)/way_updater.Tpo $(DEPDIR)/way_updater.Po
#	source='overpass_api/osm-backend/way_updater.cc' object='way_updater.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o way_updater.obj `if test -f 'overpass_api/osm-backend/way_updater.cc'; then $(CYGPATH_W) 'overpass_api/osm-backend/way_updater.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/osm-backend/way_updater.cc'; fi`

relation_updater.o: overpass_api/osm-backend/relation_updater.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT relation_updater.o -MD -MP -MF $(DEPDIR)/relation_updater.Tpo -c -o relation_updater.o `test -f 'overpass_api/osm-backend/relation_updater.cc' || echo '$(srcdir)/'`overpass_api/osm-backend/relation_updater.cc
	$(am__mv) $(DEPDIR)/relation_updater.Tpo $(DEPDIR)/relation_updater.Po
#	source='overpass_api/osm-backend/relation_updater.cc' object='relation_updater.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o relation_updater.o `test -f 'overpass_api/osm-backend/relation_updater.cc' || echo '$(srcdir)/'`overpass_api/osm-backend/relation_updater.cc

relation_updater.obj: overpass_api/osm-backend/relation_updater.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT relation_updater.obj -MD -MP -MF $(DEPDIR)/relation_updater.Tpo -c -o relation_updater.obj `if test -f 'overpass_api/osm-backend/relation_updater.cc'; then $(CYGPATH_W) 'overpass_api/osm-backend/relation_updater.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/osm-backend/relation_updater.cc'; fi`
	$(am__mv) $(DEPDIR)/relation_updater.Tpo $(DEPDIR)/relation_updater.Po
#	source='overpass_api/osm-backend/relation_updater.cc' object='relation_updater.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o relation_updater.obj `if test -f 'overpass_api/osm-backend/relation_updater.cc'; then $(CYGPATH_W) 'overpass_api/osm-backend/relation_updater.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/osm-backend/relation_updater.cc'; fi`

osm_updater.o: overpass_api/osm-backend/osm_updater.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT osm_updater.o -MD -MP -MF $(DEPDIR)/osm_updater.Tpo -c -o osm_updater.o `test -f 'overpass_api/osm-backend/osm_updater.cc' || echo '$(srcdir)/'`overpass_api/osm-backend/osm_updater.cc
	$(am__mv) $(DEPDIR)/osm_updater.Tpo $(DEPDIR)/osm_updater.Po
#	source='overpass_api/osm-backend/osm_updater.cc' object='osm_updater.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o osm_updater.o `test -f 'overpass_api/osm-backend/osm_updater.cc' || echo '$(srcdir)/'`overpass_api/osm-backend/osm_updater.cc

osm_updater.obj: overpass_api/osm-backend/osm_updater.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT osm_updater.obj -MD -MP -MF $(DEPDIR)/osm_updater.Tpo -c -o osm_updater.obj `if test -f 'overpass_api/osm-backend/osm_updater.cc'; then $(CYGPATH_W) 'overpass_api/osm-backend/osm_updater.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/osm-backend/osm_updater.cc'; fi`
	$(am__mv) $(DEPDIR)/osm_updater.Tpo $(DEPDIR)/osm_updater.Po
#	source='overpass_api/osm-backend/osm_updater.cc' object='osm_updater.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o osm_updater.obj `if test -f 'overpass_api/osm-backend/osm_updater.cc'; then $(CYGPATH_W) 'overpass_api/osm-backend/osm_updater.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/osm-backend/osm_updater.cc'; fi`

update_database.o: overpass_api/osm-backend/update_database.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT update_database.o -MD -MP -MF $(DEPDIR)/update_database.Tpo -c -o update_database.o `test -f 'overpass_api/osm-backend/update_database.cc' || echo '$(srcdir)/'`overpass_api/osm-backend/update_database.cc
	$(am__mv) $(DEPDIR)/update_database.Tpo $(DEPDIR)/update_database.Po
#	source='overpass_api/osm-backend/update_database.cc' object='update_database.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o update_database.o `test -f 'overpass_api/osm-backend/update_database.cc' || echo '$(srcdir)/'`overpass_api/osm-backend/update_database.cc

update_database.obj: overpass_api/osm-backend/update_database.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT update_database.obj -MD -MP -MF $(DEPDIR)/update_database.Tpo -c -o update_database.obj `if test -f 'overpass_api/osm-backend/update_database.cc'; then $(CYGPATH_W) 'overpass_api/osm-backend/update_database.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/osm-backend/update_database.cc'; fi`
	$(am__mv) $(DEPDIR)/update_database.Tpo $(DEPDIR)/update_database.Po
#	source='overpass_api/osm-backend/update_database.cc' object='update_database.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o update_database.obj `if test -f 'overpass_api/osm-backend/update_database.cc'; then $(CYGPATH_W) 'overpass_api/osm-backend/update_database.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/osm-backend/update_database.cc'; fi`

update_from_dir.o: overpass_api/osm-backend/update_from_dir.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT update_from_dir.o -MD -MP -MF $(DEPDIR)/update_from_dir.Tpo -c -o update_from_dir.o `test -f 'overpass_api/osm-backend/update_from_dir.cc' || echo '$(srcdir)/'`overpass_api/osm-backend/update_from_dir.cc
	$(am__mv) $(DEPDIR)/update_from_dir.Tpo $(DEPDIR)/update_from_dir.Po
#	source='overpass_api/osm-backend/update_from_dir.cc' object='update_from_dir.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o update_from_dir.o `test -f 'overpass_api/osm-backend/update_from_dir.cc' || echo '$(srcdir)/'`overpass_api/osm-backend/update_from_dir.cc

update_from_dir.obj: overpass_api/osm-backend/update_from_dir.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT update_from_dir.obj -MD -MP -MF $(DEPDIR)/update_from_dir.Tpo -c -o update_from_dir.obj `if test -f 'overpass_api/osm-backend/update_from_dir.cc'; then $(CYGPATH_W) 'overpass_api/osm-backend/update_from_dir.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/osm-backend/update_from_dir.cc'; fi`
	$(am__mv) $(DEPDIR)/update_from_dir.Tpo $(DEPDIR)/update_from_dir.Po
#	source='overpass_api/osm-backend/update_from_dir.cc' object='update_from_dir.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o update_from_dir.obj `if test -f 'overpass_api/osm-backend/update_from_dir.cc'; then $(CYGPATH_W) 'overpass_api/osm-backend/update_from_dir.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/osm-backend/update_from_dir.cc'; fi`

web_query.o: overpass_api/dispatch/web_query.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT web_query.o -MD -MP -MF $(DEPDIR)/web_query.Tpo -c -o web_query.o `test -f 'overpass_api/dispatch/web_query.cc' || echo '$(srcdir)/'`overpass_api/dispatch/web_query.cc
	$(am__mv) $(DEPDIR)/web_query.Tpo $(DEPDIR)/web_query.Po
#	source='overpass_api/dispatch/web_query.cc' object='web_query.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o web_query.o `test -f 'overpass_api/dispatch/web_query.cc' || echo '$(srcdir)/'`overpass_api/dispatch/web_query.cc

web_query.obj: overpass_api/dispatch/web_query.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT web_query.obj -MD -MP -MF $(DEPDIR)/web_query.Tpo -c -o web_query.obj `if test -f 'overpass_api/dispatch/web_query.cc'; then $(CYGPATH_W) 'overpass_api/dispatch/web_query.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/dispatch/web_query.cc'; fi`
	$(am__mv) $(DEPDIR)/web_query.Tpo $(DEPDIR)/web_query.Po
#	source='overpass_api/dispatch/web_query.cc' object='web_query.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o web_query.obj `if test -f 'overpass_api/dispatch/web_query.cc'; then $(CYGPATH_W) 'overpass_api/dispatch/web_query.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/dispatch/web_query.cc'; fi`

db_timestamp.o: overpass_api/dispatch/db_timestamp.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT db_timestamp.o -MD -MP -MF $(DEPDIR)/db_timestamp.Tpo -c -o db_timestamp.o `test -f 'overpass_api/dispatch/db_timestamp.cc' || echo '$(srcdir)/'`overpass_api/dispatch/db_timestamp.cc
	$(am__mv) $(DEPDIR)/db_timestamp.Tpo $(DEPDIR)/db_timestamp.Po
#	source='overpass_api/dispatch/db_timestamp.cc' object='db_timestamp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o db_timestamp.o `test -f 'overpass_api/dispatch/db_timestamp.cc' || echo '$(srcdir)/'`overpass_api/dispatch/db_timestamp.cc

db_timestamp.obj: overpass_api/dispatch/db_timestamp.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT db_timestamp.obj -MD -MP -MF $(DEPDIR)/db_timestamp.Tpo -c -o db_timestamp.obj `if test -f 'overpass_api/dispatch/db_timestamp.cc'; then $(CYGPATH_W) 'overpass_api/dispatch/db_timestamp.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/dispatch/db_timestamp.cc'; fi`
	$(am__mv) $(DEPDIR)/db_timestamp.Tpo $(DEPDIR)/db_timestamp.Po
#	source='overpass_api/dispatch/db_timestamp.cc' object='db_timestamp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o db_timestamp.obj `if test -f 'overpass_api/dispatch/db_timestamp.cc'; then $(CYGPATH_W) 'overpass_api/dispatch/db_timestamp.cc'; else $(CYGPATH_W) '$(srcdir)/overpass_api/dispatch/db_timestamp.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf bin/.libs bin/_libs
	-rm -rf cgi-bin/.libs cgi-bin/_libs

distclean-libtool:
	-rm -f libtool config.lt
install-templatesDATA: $(templates_DATA)
	@$(NORMAL_INSTALL)
	@list='$(templates_DATA)'; test -n "$(templatesdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(templatesdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(templatesdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(templatesdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(templatesdir)" || exit $$?; \
	done

uninstall-templatesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(templates_DATA)'; test -n "$(templatesdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(templatesdir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod u+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) $(DATA) \
		config.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(cgibindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(cgibindir)" "$(DESTDIR)$(templatesdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f bin/$(am__dirstamp)
	-rm -f cgi-bin/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-cgibinPROGRAMS clean-generic \
	clean-libtool clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-cgibinPROGRAMS install-dist_cgibinSCRIPTS \
	install-templatesDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-dist_binSCRIPTS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-cgibinPROGRAMS \
	uninstall-dist_binSCRIPTS uninstall-dist_cgibinSCRIPTS \
	uninstall-templatesDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) all \
	ctags-recursive install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am am--refresh check check-am clean clean-binPROGRAMS \
	clean-cgibinPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES ctags ctags-recursive dist dist-all \
	dist-bzip2 dist-gzip dist-lzip dist-lzma dist-shar dist-tarZ \
	dist-xz dist-zip distcheck distclean distclean-compile \
	distclean-generic distclean-hdr distclean-libtool \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-cgibinPROGRAMS install-data \
	install-data-am install-dist_binSCRIPTS \
	install-dist_cgibinSCRIPTS install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	install-templatesDATA installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-cgibinPROGRAMS uninstall-dist_binSCRIPTS \
	uninstall-dist_cgibinSCRIPTS uninstall-templatesDATA


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
